// ignore_for_file: use_super_parameters
// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_cast
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name

import "dart:isolate" show ReceivePort;
import "dart:ffi" as ffi;
import "package:jni/internal_helpers_for_jnigen.dart";
import "package:jni/jni.dart" as jni;

import "../../../../../java/util/concurrent/Executor.dart" as executor_;

import "ZoomSuggestionOptions.dart" as zoomsuggestionoptions_;
import "../../../../../_init.dart";

/// from: com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder
class BarcodeScannerOptions_Builder extends jni.JObject {
  @override
  late final jni.JObjType<BarcodeScannerOptions_Builder> $type = type;

  BarcodeScannerOptions_Builder.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BarcodeScannerOptions_BuilderType();
  static final _enableAllPotentialBarcodes = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions_Builder__enableAllPotentialBarcodes")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder enableAllPotentialBarcodes()
  /// The returned object must be released after use, by calling the [release] method.
  BarcodeScannerOptions_Builder enableAllPotentialBarcodes() {
    return const $BarcodeScannerOptions_BuilderType()
        .fromRef(_enableAllPotentialBarcodes(reference).object);
  }

  static final _setBarcodeFormats = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions_Builder__setBarcodeFormats")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder setBarcodeFormats(int i, int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  BarcodeScannerOptions_Builder setBarcodeFormats(
    int i,
    jni.JArray<jni.jint> is0,
  ) {
    return const $BarcodeScannerOptions_BuilderType()
        .fromRef(_setBarcodeFormats(reference, i, is0.reference).object);
  }

  static final _setExecutor = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions_Builder__setExecutor")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder setExecutor(java.util.concurrent.Executor executor)
  /// The returned object must be released after use, by calling the [release] method.
  BarcodeScannerOptions_Builder setExecutor(
    executor_.Executor executor,
  ) {
    return const $BarcodeScannerOptions_BuilderType()
        .fromRef(_setExecutor(reference, executor.reference).object);
  }

  static final _setZoomSuggestionOptions = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions_Builder__setZoomSuggestionOptions")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder setZoomSuggestionOptions(com.google.mlkit.vision.barcode.ZoomSuggestionOptions zoomSuggestionOptions)
  /// The returned object must be released after use, by calling the [release] method.
  BarcodeScannerOptions_Builder setZoomSuggestionOptions(
    zoomsuggestionoptions_.ZoomSuggestionOptions zoomSuggestionOptions,
  ) {
    return const $BarcodeScannerOptions_BuilderType().fromRef(
        _setZoomSuggestionOptions(reference, zoomSuggestionOptions.reference)
            .object);
  }

  static final _build = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions_Builder__build")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public com.google.mlkit.vision.barcode.BarcodeScannerOptions build()
  /// The returned object must be released after use, by calling the [release] method.
  BarcodeScannerOptions build() {
    return const $BarcodeScannerOptionsType().fromRef(_build(reference).object);
  }

  static final _new0 = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "BarcodeScannerOptions_Builder__new0")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory BarcodeScannerOptions_Builder() {
    return BarcodeScannerOptions_Builder.fromRef(_new0().object);
  }
}

final class $BarcodeScannerOptions_BuilderType
    extends jni.JObjType<BarcodeScannerOptions_Builder> {
  const $BarcodeScannerOptions_BuilderType();

  @override
  String get signature =>
      r"Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;";

  @override
  BarcodeScannerOptions_Builder fromRef(jni.JObjectPtr ref) =>
      BarcodeScannerOptions_Builder.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BarcodeScannerOptions_BuilderType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BarcodeScannerOptions_BuilderType) &&
        other is $BarcodeScannerOptions_BuilderType;
  }
}

/// from: com.google.mlkit.vision.barcode.BarcodeScannerOptions
class BarcodeScannerOptions extends jni.JObject {
  @override
  late final jni.JObjType<BarcodeScannerOptions> $type = type;

  BarcodeScannerOptions.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BarcodeScannerOptionsType();
  static final _hashCode1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions__hashCode1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode1() {
    return _hashCode1(reference).integer;
  }

  static final _equals1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BarcodeScannerOptions__equals1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object object)
  bool equals1(
    jni.JObject object,
  ) {
    return _equals1(reference, object.reference).boolean;
  }

  static final _zza = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions__zza")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int zza()
  int zza() {
    return _zza(reference).integer;
  }

  static final _zzb = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions__zzb")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final com.google.mlkit.vision.barcode.ZoomSuggestionOptions zzb()
  /// The returned object must be released after use, by calling the [release] method.
  zoomsuggestionoptions_.ZoomSuggestionOptions zzb() {
    return const zoomsuggestionoptions_.$ZoomSuggestionOptionsType()
        .fromRef(_zzb(reference).object);
  }

  static final _zzc = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions__zzc")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.concurrent.Executor zzc()
  /// The returned object must be released after use, by calling the [release] method.
  executor_.Executor zzc() {
    return const executor_.$ExecutorType().fromRef(_zzc(reference).object);
  }

  static final _zzd = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BarcodeScannerOptions__zzd")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean zzd()
  bool zzd() {
    return _zzd(reference).boolean;
  }
}

final class $BarcodeScannerOptionsType
    extends jni.JObjType<BarcodeScannerOptions> {
  const $BarcodeScannerOptionsType();

  @override
  String get signature =>
      r"Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions;";

  @override
  BarcodeScannerOptions fromRef(jni.JObjectPtr ref) =>
      BarcodeScannerOptions.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BarcodeScannerOptionsType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BarcodeScannerOptionsType) &&
        other is $BarcodeScannerOptionsType;
  }
}

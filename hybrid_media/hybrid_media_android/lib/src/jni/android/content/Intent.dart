// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: only_throw_errors
// ignore_for_file: overridden_fields
// ignore_for_file: prefer_double_quotes
// ignore_for_file: unnecessary_cast
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name
// ignore_for_file: use_super_parameters

import 'dart:ffi' as ffi;
import 'dart:isolate' show ReceivePort;

import 'package:jni/internal_helpers_for_jnigen.dart';
import 'package:jni/jni.dart' as jni;

import 'Context.dart' as context_;

/// from: `android.content.Intent$FilterComparison`
class Intent_FilterComparison extends jni.JObject {
  @override
  late final jni.JObjType<Intent_FilterComparison> $type = type;

  Intent_FilterComparison.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r'android/content/Intent$FilterComparison');

  /// The type which includes information such as the signature of this class.
  static const type = $Intent_FilterComparisonType();
  static final _id_new0 = _class.constructorId(
    r'(Landroid/content/Intent;)V',
  );

  static final _new0 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void <init>(android.content.Intent intent)`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent_FilterComparison(
    Intent intent,
  ) {
    return Intent_FilterComparison.fromReference(_new0(_class.reference.pointer,
            _id_new0 as jni.JMethodIDPtr, intent.reference.pointer)
        .reference);
  }

  static final _id_getIntent = _class.instanceMethodId(
    r'getIntent',
    r'()Landroid/content/Intent;',
  );

  static final _getIntent = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.content.Intent getIntent()`
  /// The returned object must be released after use, by calling the [release] method.
  Intent getIntent() {
    return _getIntent(reference.pointer, _id_getIntent as jni.JMethodIDPtr)
        .object(const $IntentType());
  }

  static final _id_equals = _class.instanceMethodId(
    r'equals',
    r'(Ljava/lang/Object;)Z',
  );

  static final _equals = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallBooleanMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public boolean equals(java.lang.Object object)`
  bool equals(
    jni.JObject object,
  ) {
    return _equals(reference.pointer, _id_equals as jni.JMethodIDPtr,
            object.reference.pointer)
        .boolean;
  }

  static final _id_hashCode1 = _class.instanceMethodId(
    r'hashCode',
    r'()I',
  );

  static final _hashCode1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public int hashCode()`
  int hashCode1() {
    return _hashCode1(reference.pointer, _id_hashCode1 as jni.JMethodIDPtr)
        .integer;
  }
}

final class $Intent_FilterComparisonType
    extends jni.JObjType<Intent_FilterComparison> {
  const $Intent_FilterComparisonType();

  @override
  String get signature => r'Landroid/content/Intent$FilterComparison;';

  @override
  Intent_FilterComparison fromReference(jni.JReference reference) =>
      Intent_FilterComparison.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Intent_FilterComparisonType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Intent_FilterComparisonType) &&
        other is $Intent_FilterComparisonType;
  }
}

/// from: `android.content.Intent$ShortcutIconResource`
class Intent_ShortcutIconResource extends jni.JObject {
  @override
  late final jni.JObjType<Intent_ShortcutIconResource> $type = type;

  Intent_ShortcutIconResource.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class =
      jni.JClass.forName(r'android/content/Intent$ShortcutIconResource');

  /// The type which includes information such as the signature of this class.
  static const type = $Intent_ShortcutIconResourceType();
  static final _id_CREATOR = _class.staticFieldId(
    r'CREATOR',
    r'Landroid/os/Parcelable$Creator;',
  );

  /// from: `static public final android.os.Parcelable$Creator CREATOR`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      _id_CREATOR.get(_class, const jni.JObjectType());

  static final _id_packageName = _class.instanceFieldId(
    r'packageName',
    r'Ljava/lang/String;',
  );

  /// from: `public java.lang.String packageName`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString get packageName =>
      _id_packageName.get(this, const jni.JStringType());

  /// from: `public java.lang.String packageName`
  /// The returned object must be released after use, by calling the [release] method.
  set packageName(jni.JString value) =>
      _id_packageName.set(this, const jni.JStringType(), value);

  static final _id_resourceName = _class.instanceFieldId(
    r'resourceName',
    r'Ljava/lang/String;',
  );

  /// from: `public java.lang.String resourceName`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString get resourceName =>
      _id_resourceName.get(this, const jni.JStringType());

  /// from: `public java.lang.String resourceName`
  /// The returned object must be released after use, by calling the [release] method.
  set resourceName(jni.JString value) =>
      _id_resourceName.set(this, const jni.JStringType(), value);

  static final _id_new0 = _class.constructorId(
    r'()V',
  );

  static final _new0 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent_ShortcutIconResource() {
    return Intent_ShortcutIconResource.fromReference(
        _new0(_class.reference.pointer, _id_new0 as jni.JMethodIDPtr)
            .reference);
  }

  static final _id_fromContext = _class.staticMethodId(
    r'fromContext',
    r'(Landroid/content/Context;I)Landroid/content/Intent$ShortcutIconResource;',
  );

  static final _fromContext = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `static public android.content.Intent$ShortcutIconResource fromContext(android.content.Context context, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent_ShortcutIconResource fromContext(
    context_.Context context,
    int i,
  ) {
    return _fromContext(_class.reference.pointer,
            _id_fromContext as jni.JMethodIDPtr, context.reference.pointer, i)
        .object(const $Intent_ShortcutIconResourceType());
  }

  static final _id_describeContents = _class.instanceMethodId(
    r'describeContents',
    r'()I',
  );

  static final _describeContents = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public int describeContents()`
  int describeContents() {
    return _describeContents(
            reference.pointer, _id_describeContents as jni.JMethodIDPtr)
        .integer;
  }

  static final _id_writeToParcel = _class.instanceMethodId(
    r'writeToParcel',
    r'(Landroid/os/Parcel;I)V',
  );

  static final _writeToParcel = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public void writeToParcel(android.os.Parcel parcel, int i)`
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    _writeToParcel(reference.pointer, _id_writeToParcel as jni.JMethodIDPtr,
            parcel.reference.pointer, i)
        .check();
  }

  static final _id_toString1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return _toString1(reference.pointer, _id_toString1 as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }
}

final class $Intent_ShortcutIconResourceType
    extends jni.JObjType<Intent_ShortcutIconResource> {
  const $Intent_ShortcutIconResourceType();

  @override
  String get signature => r'Landroid/content/Intent$ShortcutIconResource;';

  @override
  Intent_ShortcutIconResource fromReference(jni.JReference reference) =>
      Intent_ShortcutIconResource.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Intent_ShortcutIconResourceType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Intent_ShortcutIconResourceType) &&
        other is $Intent_ShortcutIconResourceType;
  }
}

/// from: `android.content.Intent`
class Intent extends jni.JObject {
  @override
  late final jni.JObjType<Intent> $type = type;

  Intent.fromReference(
    jni.JReference reference,
  ) : super.fromReference(reference);

  static final _class = jni.JClass.forName(r'android/content/Intent');

  /// The type which includes information such as the signature of this class.
  static const type = $IntentType();
  static final _id_ACTION_AIRPLANE_MODE_CHANGED = _class.staticFieldId(
    r'ACTION_AIRPLANE_MODE_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_AIRPLANE_MODE_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_AIRPLANE_MODE_CHANGED =>
      _id_ACTION_AIRPLANE_MODE_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_ALL_APPS = _class.staticFieldId(
    r'ACTION_ALL_APPS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_ALL_APPS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_ALL_APPS =>
      _id_ACTION_ALL_APPS.get(_class, const jni.JStringType());

  static final _id_ACTION_ANSWER = _class.staticFieldId(
    r'ACTION_ANSWER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_ANSWER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_ANSWER =>
      _id_ACTION_ANSWER.get(_class, const jni.JStringType());

  static final _id_ACTION_APPLICATION_LOCALE_CHANGED = _class.staticFieldId(
    r'ACTION_APPLICATION_LOCALE_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_APPLICATION_LOCALE_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_APPLICATION_LOCALE_CHANGED =>
      _id_ACTION_APPLICATION_LOCALE_CHANGED.get(
          _class, const jni.JStringType());

  static final _id_ACTION_APPLICATION_PREFERENCES = _class.staticFieldId(
    r'ACTION_APPLICATION_PREFERENCES',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_APPLICATION_PREFERENCES`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_APPLICATION_PREFERENCES =>
      _id_ACTION_APPLICATION_PREFERENCES.get(_class, const jni.JStringType());

  static final _id_ACTION_APPLICATION_RESTRICTIONS_CHANGED =
      _class.staticFieldId(
    r'ACTION_APPLICATION_RESTRICTIONS_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_APPLICATION_RESTRICTIONS_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_APPLICATION_RESTRICTIONS_CHANGED =>
      _id_ACTION_APPLICATION_RESTRICTIONS_CHANGED.get(
          _class, const jni.JStringType());

  static final _id_ACTION_APP_ERROR = _class.staticFieldId(
    r'ACTION_APP_ERROR',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_APP_ERROR`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_APP_ERROR =>
      _id_ACTION_APP_ERROR.get(_class, const jni.JStringType());

  static final _id_ACTION_ASSIST = _class.staticFieldId(
    r'ACTION_ASSIST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_ASSIST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_ASSIST =>
      _id_ACTION_ASSIST.get(_class, const jni.JStringType());

  static final _id_ACTION_ATTACH_DATA = _class.staticFieldId(
    r'ACTION_ATTACH_DATA',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_ATTACH_DATA`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_ATTACH_DATA =>
      _id_ACTION_ATTACH_DATA.get(_class, const jni.JStringType());

  static final _id_ACTION_AUTO_REVOKE_PERMISSIONS = _class.staticFieldId(
    r'ACTION_AUTO_REVOKE_PERMISSIONS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_AUTO_REVOKE_PERMISSIONS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_AUTO_REVOKE_PERMISSIONS =>
      _id_ACTION_AUTO_REVOKE_PERMISSIONS.get(_class, const jni.JStringType());

  static final _id_ACTION_BATTERY_CHANGED = _class.staticFieldId(
    r'ACTION_BATTERY_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_BATTERY_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_BATTERY_CHANGED =>
      _id_ACTION_BATTERY_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_BATTERY_LOW = _class.staticFieldId(
    r'ACTION_BATTERY_LOW',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_BATTERY_LOW`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_BATTERY_LOW =>
      _id_ACTION_BATTERY_LOW.get(_class, const jni.JStringType());

  static final _id_ACTION_BATTERY_OKAY = _class.staticFieldId(
    r'ACTION_BATTERY_OKAY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_BATTERY_OKAY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_BATTERY_OKAY =>
      _id_ACTION_BATTERY_OKAY.get(_class, const jni.JStringType());

  static final _id_ACTION_BOOT_COMPLETED = _class.staticFieldId(
    r'ACTION_BOOT_COMPLETED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_BOOT_COMPLETED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_BOOT_COMPLETED =>
      _id_ACTION_BOOT_COMPLETED.get(_class, const jni.JStringType());

  static final _id_ACTION_BUG_REPORT = _class.staticFieldId(
    r'ACTION_BUG_REPORT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_BUG_REPORT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_BUG_REPORT =>
      _id_ACTION_BUG_REPORT.get(_class, const jni.JStringType());

  static final _id_ACTION_CALL = _class.staticFieldId(
    r'ACTION_CALL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CALL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CALL =>
      _id_ACTION_CALL.get(_class, const jni.JStringType());

  static final _id_ACTION_CALL_BUTTON = _class.staticFieldId(
    r'ACTION_CALL_BUTTON',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CALL_BUTTON`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CALL_BUTTON =>
      _id_ACTION_CALL_BUTTON.get(_class, const jni.JStringType());

  static final _id_ACTION_CAMERA_BUTTON = _class.staticFieldId(
    r'ACTION_CAMERA_BUTTON',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CAMERA_BUTTON`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CAMERA_BUTTON =>
      _id_ACTION_CAMERA_BUTTON.get(_class, const jni.JStringType());

  static final _id_ACTION_CARRIER_SETUP = _class.staticFieldId(
    r'ACTION_CARRIER_SETUP',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CARRIER_SETUP`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CARRIER_SETUP =>
      _id_ACTION_CARRIER_SETUP.get(_class, const jni.JStringType());

  static final _id_ACTION_CHOOSER = _class.staticFieldId(
    r'ACTION_CHOOSER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CHOOSER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CHOOSER =>
      _id_ACTION_CHOOSER.get(_class, const jni.JStringType());

  static final _id_ACTION_CLOSE_SYSTEM_DIALOGS = _class.staticFieldId(
    r'ACTION_CLOSE_SYSTEM_DIALOGS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CLOSE_SYSTEM_DIALOGS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CLOSE_SYSTEM_DIALOGS =>
      _id_ACTION_CLOSE_SYSTEM_DIALOGS.get(_class, const jni.JStringType());

  static final _id_ACTION_CONFIGURATION_CHANGED = _class.staticFieldId(
    r'ACTION_CONFIGURATION_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CONFIGURATION_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CONFIGURATION_CHANGED =>
      _id_ACTION_CONFIGURATION_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_CREATE_DOCUMENT = _class.staticFieldId(
    r'ACTION_CREATE_DOCUMENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CREATE_DOCUMENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CREATE_DOCUMENT =>
      _id_ACTION_CREATE_DOCUMENT.get(_class, const jni.JStringType());

  static final _id_ACTION_CREATE_NOTE = _class.staticFieldId(
    r'ACTION_CREATE_NOTE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CREATE_NOTE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CREATE_NOTE =>
      _id_ACTION_CREATE_NOTE.get(_class, const jni.JStringType());

  static final _id_ACTION_CREATE_REMINDER = _class.staticFieldId(
    r'ACTION_CREATE_REMINDER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CREATE_REMINDER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CREATE_REMINDER =>
      _id_ACTION_CREATE_REMINDER.get(_class, const jni.JStringType());

  static final _id_ACTION_CREATE_SHORTCUT = _class.staticFieldId(
    r'ACTION_CREATE_SHORTCUT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_CREATE_SHORTCUT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_CREATE_SHORTCUT =>
      _id_ACTION_CREATE_SHORTCUT.get(_class, const jni.JStringType());

  static final _id_ACTION_DATE_CHANGED = _class.staticFieldId(
    r'ACTION_DATE_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DATE_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DATE_CHANGED =>
      _id_ACTION_DATE_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_DEFAULT = _class.staticFieldId(
    r'ACTION_DEFAULT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DEFAULT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DEFAULT =>
      _id_ACTION_DEFAULT.get(_class, const jni.JStringType());

  static final _id_ACTION_DEFINE = _class.staticFieldId(
    r'ACTION_DEFINE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DEFINE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DEFINE =>
      _id_ACTION_DEFINE.get(_class, const jni.JStringType());

  static final _id_ACTION_DELETE = _class.staticFieldId(
    r'ACTION_DELETE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DELETE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DELETE =>
      _id_ACTION_DELETE.get(_class, const jni.JStringType());

  static final _id_ACTION_DEVICE_STORAGE_LOW = _class.staticFieldId(
    r'ACTION_DEVICE_STORAGE_LOW',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DEVICE_STORAGE_LOW`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DEVICE_STORAGE_LOW =>
      _id_ACTION_DEVICE_STORAGE_LOW.get(_class, const jni.JStringType());

  static final _id_ACTION_DEVICE_STORAGE_OK = _class.staticFieldId(
    r'ACTION_DEVICE_STORAGE_OK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DEVICE_STORAGE_OK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DEVICE_STORAGE_OK =>
      _id_ACTION_DEVICE_STORAGE_OK.get(_class, const jni.JStringType());

  static final _id_ACTION_DIAL = _class.staticFieldId(
    r'ACTION_DIAL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DIAL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DIAL =>
      _id_ACTION_DIAL.get(_class, const jni.JStringType());

  static final _id_ACTION_DOCK_EVENT = _class.staticFieldId(
    r'ACTION_DOCK_EVENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DOCK_EVENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DOCK_EVENT =>
      _id_ACTION_DOCK_EVENT.get(_class, const jni.JStringType());

  static final _id_ACTION_DREAMING_STARTED = _class.staticFieldId(
    r'ACTION_DREAMING_STARTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DREAMING_STARTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DREAMING_STARTED =>
      _id_ACTION_DREAMING_STARTED.get(_class, const jni.JStringType());

  static final _id_ACTION_DREAMING_STOPPED = _class.staticFieldId(
    r'ACTION_DREAMING_STOPPED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_DREAMING_STOPPED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_DREAMING_STOPPED =>
      _id_ACTION_DREAMING_STOPPED.get(_class, const jni.JStringType());

  static final _id_ACTION_EDIT = _class.staticFieldId(
    r'ACTION_EDIT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_EDIT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_EDIT =>
      _id_ACTION_EDIT.get(_class, const jni.JStringType());

  static final _id_ACTION_EXTERNAL_APPLICATIONS_AVAILABLE =
      _class.staticFieldId(
    r'ACTION_EXTERNAL_APPLICATIONS_AVAILABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_EXTERNAL_APPLICATIONS_AVAILABLE =>
      _id_ACTION_EXTERNAL_APPLICATIONS_AVAILABLE.get(
          _class, const jni.JStringType());

  static final _id_ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE =
      _class.staticFieldId(
    r'ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE =>
      _id_ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE.get(
          _class, const jni.JStringType());

  static final _id_ACTION_FACTORY_TEST = _class.staticFieldId(
    r'ACTION_FACTORY_TEST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_FACTORY_TEST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_FACTORY_TEST =>
      _id_ACTION_FACTORY_TEST.get(_class, const jni.JStringType());

  static final _id_ACTION_GET_CONTENT = _class.staticFieldId(
    r'ACTION_GET_CONTENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_GET_CONTENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_GET_CONTENT =>
      _id_ACTION_GET_CONTENT.get(_class, const jni.JStringType());

  static final _id_ACTION_GET_RESTRICTION_ENTRIES = _class.staticFieldId(
    r'ACTION_GET_RESTRICTION_ENTRIES',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_GET_RESTRICTION_ENTRIES`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_GET_RESTRICTION_ENTRIES =>
      _id_ACTION_GET_RESTRICTION_ENTRIES.get(_class, const jni.JStringType());

  static final _id_ACTION_GTALK_SERVICE_CONNECTED = _class.staticFieldId(
    r'ACTION_GTALK_SERVICE_CONNECTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_GTALK_SERVICE_CONNECTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_GTALK_SERVICE_CONNECTED =>
      _id_ACTION_GTALK_SERVICE_CONNECTED.get(_class, const jni.JStringType());

  static final _id_ACTION_GTALK_SERVICE_DISCONNECTED = _class.staticFieldId(
    r'ACTION_GTALK_SERVICE_DISCONNECTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_GTALK_SERVICE_DISCONNECTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_GTALK_SERVICE_DISCONNECTED =>
      _id_ACTION_GTALK_SERVICE_DISCONNECTED.get(
          _class, const jni.JStringType());

  static final _id_ACTION_HEADSET_PLUG = _class.staticFieldId(
    r'ACTION_HEADSET_PLUG',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_HEADSET_PLUG`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_HEADSET_PLUG =>
      _id_ACTION_HEADSET_PLUG.get(_class, const jni.JStringType());

  static final _id_ACTION_INPUT_METHOD_CHANGED = _class.staticFieldId(
    r'ACTION_INPUT_METHOD_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_INPUT_METHOD_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_INPUT_METHOD_CHANGED =>
      _id_ACTION_INPUT_METHOD_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_INSERT = _class.staticFieldId(
    r'ACTION_INSERT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_INSERT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_INSERT =>
      _id_ACTION_INSERT.get(_class, const jni.JStringType());

  static final _id_ACTION_INSERT_OR_EDIT = _class.staticFieldId(
    r'ACTION_INSERT_OR_EDIT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_INSERT_OR_EDIT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_INSERT_OR_EDIT =>
      _id_ACTION_INSERT_OR_EDIT.get(_class, const jni.JStringType());

  static final _id_ACTION_INSTALL_FAILURE = _class.staticFieldId(
    r'ACTION_INSTALL_FAILURE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_INSTALL_FAILURE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_INSTALL_FAILURE =>
      _id_ACTION_INSTALL_FAILURE.get(_class, const jni.JStringType());

  static final _id_ACTION_INSTALL_PACKAGE = _class.staticFieldId(
    r'ACTION_INSTALL_PACKAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_INSTALL_PACKAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_INSTALL_PACKAGE =>
      _id_ACTION_INSTALL_PACKAGE.get(_class, const jni.JStringType());

  static final _id_ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE =
      _class.staticFieldId(
    r'ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE =>
      _id_ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE.get(
          _class, const jni.JStringType());

  static final _id_ACTION_LOCALE_CHANGED = _class.staticFieldId(
    r'ACTION_LOCALE_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_LOCALE_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_LOCALE_CHANGED =>
      _id_ACTION_LOCALE_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_LOCKED_BOOT_COMPLETED = _class.staticFieldId(
    r'ACTION_LOCKED_BOOT_COMPLETED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_LOCKED_BOOT_COMPLETED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_LOCKED_BOOT_COMPLETED =>
      _id_ACTION_LOCKED_BOOT_COMPLETED.get(_class, const jni.JStringType());

  static final _id_ACTION_MAIN = _class.staticFieldId(
    r'ACTION_MAIN',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MAIN`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MAIN =>
      _id_ACTION_MAIN.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGED_PROFILE_ADDED = _class.staticFieldId(
    r'ACTION_MANAGED_PROFILE_ADDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGED_PROFILE_ADDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGED_PROFILE_ADDED =>
      _id_ACTION_MANAGED_PROFILE_ADDED.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGED_PROFILE_AVAILABLE = _class.staticFieldId(
    r'ACTION_MANAGED_PROFILE_AVAILABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGED_PROFILE_AVAILABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGED_PROFILE_AVAILABLE =>
      _id_ACTION_MANAGED_PROFILE_AVAILABLE.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGED_PROFILE_REMOVED = _class.staticFieldId(
    r'ACTION_MANAGED_PROFILE_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGED_PROFILE_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGED_PROFILE_REMOVED =>
      _id_ACTION_MANAGED_PROFILE_REMOVED.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGED_PROFILE_UNAVAILABLE = _class.staticFieldId(
    r'ACTION_MANAGED_PROFILE_UNAVAILABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGED_PROFILE_UNAVAILABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGED_PROFILE_UNAVAILABLE =>
      _id_ACTION_MANAGED_PROFILE_UNAVAILABLE.get(
          _class, const jni.JStringType());

  static final _id_ACTION_MANAGED_PROFILE_UNLOCKED = _class.staticFieldId(
    r'ACTION_MANAGED_PROFILE_UNLOCKED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGED_PROFILE_UNLOCKED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGED_PROFILE_UNLOCKED =>
      _id_ACTION_MANAGED_PROFILE_UNLOCKED.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGE_NETWORK_USAGE = _class.staticFieldId(
    r'ACTION_MANAGE_NETWORK_USAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGE_NETWORK_USAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGE_NETWORK_USAGE =>
      _id_ACTION_MANAGE_NETWORK_USAGE.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGE_PACKAGE_STORAGE = _class.staticFieldId(
    r'ACTION_MANAGE_PACKAGE_STORAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGE_PACKAGE_STORAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGE_PACKAGE_STORAGE =>
      _id_ACTION_MANAGE_PACKAGE_STORAGE.get(_class, const jni.JStringType());

  static final _id_ACTION_MANAGE_UNUSED_APPS = _class.staticFieldId(
    r'ACTION_MANAGE_UNUSED_APPS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MANAGE_UNUSED_APPS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MANAGE_UNUSED_APPS =>
      _id_ACTION_MANAGE_UNUSED_APPS.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_BAD_REMOVAL = _class.staticFieldId(
    r'ACTION_MEDIA_BAD_REMOVAL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_BAD_REMOVAL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_BAD_REMOVAL =>
      _id_ACTION_MEDIA_BAD_REMOVAL.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_BUTTON = _class.staticFieldId(
    r'ACTION_MEDIA_BUTTON',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_BUTTON`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_BUTTON =>
      _id_ACTION_MEDIA_BUTTON.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_CHECKING = _class.staticFieldId(
    r'ACTION_MEDIA_CHECKING',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_CHECKING`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_CHECKING =>
      _id_ACTION_MEDIA_CHECKING.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_EJECT = _class.staticFieldId(
    r'ACTION_MEDIA_EJECT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_EJECT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_EJECT =>
      _id_ACTION_MEDIA_EJECT.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_MOUNTED = _class.staticFieldId(
    r'ACTION_MEDIA_MOUNTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_MOUNTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_MOUNTED =>
      _id_ACTION_MEDIA_MOUNTED.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_NOFS = _class.staticFieldId(
    r'ACTION_MEDIA_NOFS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_NOFS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_NOFS =>
      _id_ACTION_MEDIA_NOFS.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_REMOVED = _class.staticFieldId(
    r'ACTION_MEDIA_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_REMOVED =>
      _id_ACTION_MEDIA_REMOVED.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_SCANNER_FINISHED = _class.staticFieldId(
    r'ACTION_MEDIA_SCANNER_FINISHED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_SCANNER_FINISHED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_SCANNER_FINISHED =>
      _id_ACTION_MEDIA_SCANNER_FINISHED.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_SCANNER_SCAN_FILE = _class.staticFieldId(
    r'ACTION_MEDIA_SCANNER_SCAN_FILE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_SCANNER_SCAN_FILE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_SCANNER_SCAN_FILE =>
      _id_ACTION_MEDIA_SCANNER_SCAN_FILE.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_SCANNER_STARTED = _class.staticFieldId(
    r'ACTION_MEDIA_SCANNER_STARTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_SCANNER_STARTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_SCANNER_STARTED =>
      _id_ACTION_MEDIA_SCANNER_STARTED.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_SHARED = _class.staticFieldId(
    r'ACTION_MEDIA_SHARED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_SHARED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_SHARED =>
      _id_ACTION_MEDIA_SHARED.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_UNMOUNTABLE = _class.staticFieldId(
    r'ACTION_MEDIA_UNMOUNTABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_UNMOUNTABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_UNMOUNTABLE =>
      _id_ACTION_MEDIA_UNMOUNTABLE.get(_class, const jni.JStringType());

  static final _id_ACTION_MEDIA_UNMOUNTED = _class.staticFieldId(
    r'ACTION_MEDIA_UNMOUNTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MEDIA_UNMOUNTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MEDIA_UNMOUNTED =>
      _id_ACTION_MEDIA_UNMOUNTED.get(_class, const jni.JStringType());

  static final _id_ACTION_MY_PACKAGE_REPLACED = _class.staticFieldId(
    r'ACTION_MY_PACKAGE_REPLACED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MY_PACKAGE_REPLACED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MY_PACKAGE_REPLACED =>
      _id_ACTION_MY_PACKAGE_REPLACED.get(_class, const jni.JStringType());

  static final _id_ACTION_MY_PACKAGE_SUSPENDED = _class.staticFieldId(
    r'ACTION_MY_PACKAGE_SUSPENDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MY_PACKAGE_SUSPENDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MY_PACKAGE_SUSPENDED =>
      _id_ACTION_MY_PACKAGE_SUSPENDED.get(_class, const jni.JStringType());

  static final _id_ACTION_MY_PACKAGE_UNSUSPENDED = _class.staticFieldId(
    r'ACTION_MY_PACKAGE_UNSUSPENDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_MY_PACKAGE_UNSUSPENDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_MY_PACKAGE_UNSUSPENDED =>
      _id_ACTION_MY_PACKAGE_UNSUSPENDED.get(_class, const jni.JStringType());

  static final _id_ACTION_NEW_OUTGOING_CALL = _class.staticFieldId(
    r'ACTION_NEW_OUTGOING_CALL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_NEW_OUTGOING_CALL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_NEW_OUTGOING_CALL =>
      _id_ACTION_NEW_OUTGOING_CALL.get(_class, const jni.JStringType());

  static final _id_ACTION_OPEN_DOCUMENT = _class.staticFieldId(
    r'ACTION_OPEN_DOCUMENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_OPEN_DOCUMENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_OPEN_DOCUMENT =>
      _id_ACTION_OPEN_DOCUMENT.get(_class, const jni.JStringType());

  static final _id_ACTION_OPEN_DOCUMENT_TREE = _class.staticFieldId(
    r'ACTION_OPEN_DOCUMENT_TREE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_OPEN_DOCUMENT_TREE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_OPEN_DOCUMENT_TREE =>
      _id_ACTION_OPEN_DOCUMENT_TREE.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGES_SUSPENDED = _class.staticFieldId(
    r'ACTION_PACKAGES_SUSPENDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGES_SUSPENDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGES_SUSPENDED =>
      _id_ACTION_PACKAGES_SUSPENDED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGES_UNSUSPENDED = _class.staticFieldId(
    r'ACTION_PACKAGES_UNSUSPENDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGES_UNSUSPENDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGES_UNSUSPENDED =>
      _id_ACTION_PACKAGES_UNSUSPENDED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_ADDED = _class.staticFieldId(
    r'ACTION_PACKAGE_ADDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_ADDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_ADDED =>
      _id_ACTION_PACKAGE_ADDED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_CHANGED = _class.staticFieldId(
    r'ACTION_PACKAGE_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_CHANGED =>
      _id_ACTION_PACKAGE_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_DATA_CLEARED = _class.staticFieldId(
    r'ACTION_PACKAGE_DATA_CLEARED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_DATA_CLEARED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_DATA_CLEARED =>
      _id_ACTION_PACKAGE_DATA_CLEARED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_FIRST_LAUNCH = _class.staticFieldId(
    r'ACTION_PACKAGE_FIRST_LAUNCH',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_FIRST_LAUNCH`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_FIRST_LAUNCH =>
      _id_ACTION_PACKAGE_FIRST_LAUNCH.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_FULLY_REMOVED = _class.staticFieldId(
    r'ACTION_PACKAGE_FULLY_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_FULLY_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_FULLY_REMOVED =>
      _id_ACTION_PACKAGE_FULLY_REMOVED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_INSTALL = _class.staticFieldId(
    r'ACTION_PACKAGE_INSTALL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_INSTALL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_INSTALL =>
      _id_ACTION_PACKAGE_INSTALL.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_NEEDS_VERIFICATION = _class.staticFieldId(
    r'ACTION_PACKAGE_NEEDS_VERIFICATION',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_NEEDS_VERIFICATION`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_NEEDS_VERIFICATION =>
      _id_ACTION_PACKAGE_NEEDS_VERIFICATION.get(
          _class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_REMOVED = _class.staticFieldId(
    r'ACTION_PACKAGE_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_REMOVED =>
      _id_ACTION_PACKAGE_REMOVED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_REPLACED = _class.staticFieldId(
    r'ACTION_PACKAGE_REPLACED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_REPLACED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_REPLACED =>
      _id_ACTION_PACKAGE_REPLACED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_RESTARTED = _class.staticFieldId(
    r'ACTION_PACKAGE_RESTARTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_RESTARTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_RESTARTED =>
      _id_ACTION_PACKAGE_RESTARTED.get(_class, const jni.JStringType());

  static final _id_ACTION_PACKAGE_VERIFIED = _class.staticFieldId(
    r'ACTION_PACKAGE_VERIFIED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PACKAGE_VERIFIED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PACKAGE_VERIFIED =>
      _id_ACTION_PACKAGE_VERIFIED.get(_class, const jni.JStringType());

  static final _id_ACTION_PASTE = _class.staticFieldId(
    r'ACTION_PASTE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PASTE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PASTE =>
      _id_ACTION_PASTE.get(_class, const jni.JStringType());

  static final _id_ACTION_PICK = _class.staticFieldId(
    r'ACTION_PICK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PICK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PICK =>
      _id_ACTION_PICK.get(_class, const jni.JStringType());

  static final _id_ACTION_PICK_ACTIVITY = _class.staticFieldId(
    r'ACTION_PICK_ACTIVITY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PICK_ACTIVITY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PICK_ACTIVITY =>
      _id_ACTION_PICK_ACTIVITY.get(_class, const jni.JStringType());

  static final _id_ACTION_POWER_CONNECTED = _class.staticFieldId(
    r'ACTION_POWER_CONNECTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_POWER_CONNECTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_POWER_CONNECTED =>
      _id_ACTION_POWER_CONNECTED.get(_class, const jni.JStringType());

  static final _id_ACTION_POWER_DISCONNECTED = _class.staticFieldId(
    r'ACTION_POWER_DISCONNECTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_POWER_DISCONNECTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_POWER_DISCONNECTED =>
      _id_ACTION_POWER_DISCONNECTED.get(_class, const jni.JStringType());

  static final _id_ACTION_POWER_USAGE_SUMMARY = _class.staticFieldId(
    r'ACTION_POWER_USAGE_SUMMARY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_POWER_USAGE_SUMMARY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_POWER_USAGE_SUMMARY =>
      _id_ACTION_POWER_USAGE_SUMMARY.get(_class, const jni.JStringType());

  static final _id_ACTION_PROCESS_TEXT = _class.staticFieldId(
    r'ACTION_PROCESS_TEXT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PROCESS_TEXT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PROCESS_TEXT =>
      _id_ACTION_PROCESS_TEXT.get(_class, const jni.JStringType());

  static final _id_ACTION_PROFILE_ACCESSIBLE = _class.staticFieldId(
    r'ACTION_PROFILE_ACCESSIBLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PROFILE_ACCESSIBLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PROFILE_ACCESSIBLE =>
      _id_ACTION_PROFILE_ACCESSIBLE.get(_class, const jni.JStringType());

  static final _id_ACTION_PROFILE_ADDED = _class.staticFieldId(
    r'ACTION_PROFILE_ADDED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PROFILE_ADDED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PROFILE_ADDED =>
      _id_ACTION_PROFILE_ADDED.get(_class, const jni.JStringType());

  static final _id_ACTION_PROFILE_INACCESSIBLE = _class.staticFieldId(
    r'ACTION_PROFILE_INACCESSIBLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PROFILE_INACCESSIBLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PROFILE_INACCESSIBLE =>
      _id_ACTION_PROFILE_INACCESSIBLE.get(_class, const jni.JStringType());

  static final _id_ACTION_PROFILE_REMOVED = _class.staticFieldId(
    r'ACTION_PROFILE_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PROFILE_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PROFILE_REMOVED =>
      _id_ACTION_PROFILE_REMOVED.get(_class, const jni.JStringType());

  static final _id_ACTION_PROVIDER_CHANGED = _class.staticFieldId(
    r'ACTION_PROVIDER_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_PROVIDER_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_PROVIDER_CHANGED =>
      _id_ACTION_PROVIDER_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_QUICK_CLOCK = _class.staticFieldId(
    r'ACTION_QUICK_CLOCK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_QUICK_CLOCK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_QUICK_CLOCK =>
      _id_ACTION_QUICK_CLOCK.get(_class, const jni.JStringType());

  static final _id_ACTION_QUICK_VIEW = _class.staticFieldId(
    r'ACTION_QUICK_VIEW',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_QUICK_VIEW`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_QUICK_VIEW =>
      _id_ACTION_QUICK_VIEW.get(_class, const jni.JStringType());

  static final _id_ACTION_REBOOT = _class.staticFieldId(
    r'ACTION_REBOOT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_REBOOT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_REBOOT =>
      _id_ACTION_REBOOT.get(_class, const jni.JStringType());

  static final _id_ACTION_RUN = _class.staticFieldId(
    r'ACTION_RUN',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_RUN`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_RUN =>
      _id_ACTION_RUN.get(_class, const jni.JStringType());

  static final _id_ACTION_SAFETY_CENTER = _class.staticFieldId(
    r'ACTION_SAFETY_CENTER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SAFETY_CENTER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SAFETY_CENTER =>
      _id_ACTION_SAFETY_CENTER.get(_class, const jni.JStringType());

  static final _id_ACTION_SCREEN_OFF = _class.staticFieldId(
    r'ACTION_SCREEN_OFF',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SCREEN_OFF`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SCREEN_OFF =>
      _id_ACTION_SCREEN_OFF.get(_class, const jni.JStringType());

  static final _id_ACTION_SCREEN_ON = _class.staticFieldId(
    r'ACTION_SCREEN_ON',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SCREEN_ON`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SCREEN_ON =>
      _id_ACTION_SCREEN_ON.get(_class, const jni.JStringType());

  static final _id_ACTION_SEARCH = _class.staticFieldId(
    r'ACTION_SEARCH',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SEARCH`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SEARCH =>
      _id_ACTION_SEARCH.get(_class, const jni.JStringType());

  static final _id_ACTION_SEARCH_LONG_PRESS = _class.staticFieldId(
    r'ACTION_SEARCH_LONG_PRESS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SEARCH_LONG_PRESS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SEARCH_LONG_PRESS =>
      _id_ACTION_SEARCH_LONG_PRESS.get(_class, const jni.JStringType());

  static final _id_ACTION_SEND = _class.staticFieldId(
    r'ACTION_SEND',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SEND`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SEND =>
      _id_ACTION_SEND.get(_class, const jni.JStringType());

  static final _id_ACTION_SENDTO = _class.staticFieldId(
    r'ACTION_SENDTO',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SENDTO`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SENDTO =>
      _id_ACTION_SENDTO.get(_class, const jni.JStringType());

  static final _id_ACTION_SEND_MULTIPLE = _class.staticFieldId(
    r'ACTION_SEND_MULTIPLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SEND_MULTIPLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SEND_MULTIPLE =>
      _id_ACTION_SEND_MULTIPLE.get(_class, const jni.JStringType());

  static final _id_ACTION_SET_WALLPAPER = _class.staticFieldId(
    r'ACTION_SET_WALLPAPER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SET_WALLPAPER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SET_WALLPAPER =>
      _id_ACTION_SET_WALLPAPER.get(_class, const jni.JStringType());

  static final _id_ACTION_SHOW_APP_INFO = _class.staticFieldId(
    r'ACTION_SHOW_APP_INFO',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SHOW_APP_INFO`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SHOW_APP_INFO =>
      _id_ACTION_SHOW_APP_INFO.get(_class, const jni.JStringType());

  static final _id_ACTION_SHOW_WORK_APPS = _class.staticFieldId(
    r'ACTION_SHOW_WORK_APPS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SHOW_WORK_APPS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SHOW_WORK_APPS =>
      _id_ACTION_SHOW_WORK_APPS.get(_class, const jni.JStringType());

  static final _id_ACTION_SHUTDOWN = _class.staticFieldId(
    r'ACTION_SHUTDOWN',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SHUTDOWN`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SHUTDOWN =>
      _id_ACTION_SHUTDOWN.get(_class, const jni.JStringType());

  static final _id_ACTION_SYNC = _class.staticFieldId(
    r'ACTION_SYNC',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SYNC`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SYNC =>
      _id_ACTION_SYNC.get(_class, const jni.JStringType());

  static final _id_ACTION_SYSTEM_TUTORIAL = _class.staticFieldId(
    r'ACTION_SYSTEM_TUTORIAL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_SYSTEM_TUTORIAL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_SYSTEM_TUTORIAL =>
      _id_ACTION_SYSTEM_TUTORIAL.get(_class, const jni.JStringType());

  static final _id_ACTION_TIMEZONE_CHANGED = _class.staticFieldId(
    r'ACTION_TIMEZONE_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_TIMEZONE_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_TIMEZONE_CHANGED =>
      _id_ACTION_TIMEZONE_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_TIME_CHANGED = _class.staticFieldId(
    r'ACTION_TIME_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_TIME_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_TIME_CHANGED =>
      _id_ACTION_TIME_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_TIME_TICK = _class.staticFieldId(
    r'ACTION_TIME_TICK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_TIME_TICK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_TIME_TICK =>
      _id_ACTION_TIME_TICK.get(_class, const jni.JStringType());

  static final _id_ACTION_TRANSLATE = _class.staticFieldId(
    r'ACTION_TRANSLATE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_TRANSLATE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_TRANSLATE =>
      _id_ACTION_TRANSLATE.get(_class, const jni.JStringType());

  static final _id_ACTION_UID_REMOVED = _class.staticFieldId(
    r'ACTION_UID_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_UID_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_UID_REMOVED =>
      _id_ACTION_UID_REMOVED.get(_class, const jni.JStringType());

  static final _id_ACTION_UMS_CONNECTED = _class.staticFieldId(
    r'ACTION_UMS_CONNECTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_UMS_CONNECTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_UMS_CONNECTED =>
      _id_ACTION_UMS_CONNECTED.get(_class, const jni.JStringType());

  static final _id_ACTION_UMS_DISCONNECTED = _class.staticFieldId(
    r'ACTION_UMS_DISCONNECTED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_UMS_DISCONNECTED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_UMS_DISCONNECTED =>
      _id_ACTION_UMS_DISCONNECTED.get(_class, const jni.JStringType());

  static final _id_ACTION_UNINSTALL_PACKAGE = _class.staticFieldId(
    r'ACTION_UNINSTALL_PACKAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_UNINSTALL_PACKAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_UNINSTALL_PACKAGE =>
      _id_ACTION_UNINSTALL_PACKAGE.get(_class, const jni.JStringType());

  static final _id_ACTION_USER_BACKGROUND = _class.staticFieldId(
    r'ACTION_USER_BACKGROUND',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_USER_BACKGROUND`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_USER_BACKGROUND =>
      _id_ACTION_USER_BACKGROUND.get(_class, const jni.JStringType());

  static final _id_ACTION_USER_FOREGROUND = _class.staticFieldId(
    r'ACTION_USER_FOREGROUND',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_USER_FOREGROUND`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_USER_FOREGROUND =>
      _id_ACTION_USER_FOREGROUND.get(_class, const jni.JStringType());

  static final _id_ACTION_USER_INITIALIZE = _class.staticFieldId(
    r'ACTION_USER_INITIALIZE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_USER_INITIALIZE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_USER_INITIALIZE =>
      _id_ACTION_USER_INITIALIZE.get(_class, const jni.JStringType());

  static final _id_ACTION_USER_PRESENT = _class.staticFieldId(
    r'ACTION_USER_PRESENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_USER_PRESENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_USER_PRESENT =>
      _id_ACTION_USER_PRESENT.get(_class, const jni.JStringType());

  static final _id_ACTION_USER_UNLOCKED = _class.staticFieldId(
    r'ACTION_USER_UNLOCKED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_USER_UNLOCKED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_USER_UNLOCKED =>
      _id_ACTION_USER_UNLOCKED.get(_class, const jni.JStringType());

  static final _id_ACTION_VIEW = _class.staticFieldId(
    r'ACTION_VIEW',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_VIEW`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_VIEW =>
      _id_ACTION_VIEW.get(_class, const jni.JStringType());

  static final _id_ACTION_VIEW_LOCUS = _class.staticFieldId(
    r'ACTION_VIEW_LOCUS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_VIEW_LOCUS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_VIEW_LOCUS =>
      _id_ACTION_VIEW_LOCUS.get(_class, const jni.JStringType());

  static final _id_ACTION_VIEW_PERMISSION_USAGE = _class.staticFieldId(
    r'ACTION_VIEW_PERMISSION_USAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_VIEW_PERMISSION_USAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_VIEW_PERMISSION_USAGE =>
      _id_ACTION_VIEW_PERMISSION_USAGE.get(_class, const jni.JStringType());

  static final _id_ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD =
      _class.staticFieldId(
    r'ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD =>
      _id_ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD.get(
          _class, const jni.JStringType());

  static final _id_ACTION_VOICE_COMMAND = _class.staticFieldId(
    r'ACTION_VOICE_COMMAND',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_VOICE_COMMAND`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_VOICE_COMMAND =>
      _id_ACTION_VOICE_COMMAND.get(_class, const jni.JStringType());

  static final _id_ACTION_WALLPAPER_CHANGED = _class.staticFieldId(
    r'ACTION_WALLPAPER_CHANGED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_WALLPAPER_CHANGED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_WALLPAPER_CHANGED =>
      _id_ACTION_WALLPAPER_CHANGED.get(_class, const jni.JStringType());

  static final _id_ACTION_WEB_SEARCH = _class.staticFieldId(
    r'ACTION_WEB_SEARCH',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String ACTION_WEB_SEARCH`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get ACTION_WEB_SEARCH =>
      _id_ACTION_WEB_SEARCH.get(_class, const jni.JStringType());

  /// from: `static public final int CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN`
  static const CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN = 4;

  /// from: `static public final int CAPTURE_CONTENT_FOR_NOTE_FAILED`
  static const CAPTURE_CONTENT_FOR_NOTE_FAILED = 1;

  /// from: `static public final int CAPTURE_CONTENT_FOR_NOTE_SUCCESS`
  static const CAPTURE_CONTENT_FOR_NOTE_SUCCESS = 0;

  /// from: `static public final int CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED`
  static const CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED = 2;

  /// from: `static public final int CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED`
  static const CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED = 3;
  static final _id_CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET =
      _class.staticFieldId(
    r'CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET =>
      _id_CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET.get(
          _class, const jni.JStringType());

  static final _id_CATEGORY_ALTERNATIVE = _class.staticFieldId(
    r'CATEGORY_ALTERNATIVE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_ALTERNATIVE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_ALTERNATIVE =>
      _id_CATEGORY_ALTERNATIVE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_BROWSER = _class.staticFieldId(
    r'CATEGORY_APP_BROWSER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_BROWSER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_BROWSER =>
      _id_CATEGORY_APP_BROWSER.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_CALCULATOR = _class.staticFieldId(
    r'CATEGORY_APP_CALCULATOR',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_CALCULATOR`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_CALCULATOR =>
      _id_CATEGORY_APP_CALCULATOR.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_CALENDAR = _class.staticFieldId(
    r'CATEGORY_APP_CALENDAR',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_CALENDAR`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_CALENDAR =>
      _id_CATEGORY_APP_CALENDAR.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_CONTACTS = _class.staticFieldId(
    r'CATEGORY_APP_CONTACTS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_CONTACTS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_CONTACTS =>
      _id_CATEGORY_APP_CONTACTS.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_EMAIL = _class.staticFieldId(
    r'CATEGORY_APP_EMAIL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_EMAIL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_EMAIL =>
      _id_CATEGORY_APP_EMAIL.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_FILES = _class.staticFieldId(
    r'CATEGORY_APP_FILES',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_FILES`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_FILES =>
      _id_CATEGORY_APP_FILES.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_FITNESS = _class.staticFieldId(
    r'CATEGORY_APP_FITNESS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_FITNESS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_FITNESS =>
      _id_CATEGORY_APP_FITNESS.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_GALLERY = _class.staticFieldId(
    r'CATEGORY_APP_GALLERY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_GALLERY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_GALLERY =>
      _id_CATEGORY_APP_GALLERY.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_MAPS = _class.staticFieldId(
    r'CATEGORY_APP_MAPS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_MAPS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_MAPS =>
      _id_CATEGORY_APP_MAPS.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_MARKET = _class.staticFieldId(
    r'CATEGORY_APP_MARKET',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_MARKET`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_MARKET =>
      _id_CATEGORY_APP_MARKET.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_MESSAGING = _class.staticFieldId(
    r'CATEGORY_APP_MESSAGING',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_MESSAGING`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_MESSAGING =>
      _id_CATEGORY_APP_MESSAGING.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_MUSIC = _class.staticFieldId(
    r'CATEGORY_APP_MUSIC',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_MUSIC`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_MUSIC =>
      _id_CATEGORY_APP_MUSIC.get(_class, const jni.JStringType());

  static final _id_CATEGORY_APP_WEATHER = _class.staticFieldId(
    r'CATEGORY_APP_WEATHER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_APP_WEATHER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_APP_WEATHER =>
      _id_CATEGORY_APP_WEATHER.get(_class, const jni.JStringType());

  static final _id_CATEGORY_BROWSABLE = _class.staticFieldId(
    r'CATEGORY_BROWSABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_BROWSABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_BROWSABLE =>
      _id_CATEGORY_BROWSABLE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_CAR_DOCK = _class.staticFieldId(
    r'CATEGORY_CAR_DOCK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_CAR_DOCK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_CAR_DOCK =>
      _id_CATEGORY_CAR_DOCK.get(_class, const jni.JStringType());

  static final _id_CATEGORY_CAR_MODE = _class.staticFieldId(
    r'CATEGORY_CAR_MODE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_CAR_MODE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_CAR_MODE =>
      _id_CATEGORY_CAR_MODE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_DEFAULT = _class.staticFieldId(
    r'CATEGORY_DEFAULT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_DEFAULT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_DEFAULT =>
      _id_CATEGORY_DEFAULT.get(_class, const jni.JStringType());

  static final _id_CATEGORY_DESK_DOCK = _class.staticFieldId(
    r'CATEGORY_DESK_DOCK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_DESK_DOCK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_DESK_DOCK =>
      _id_CATEGORY_DESK_DOCK.get(_class, const jni.JStringType());

  static final _id_CATEGORY_DEVELOPMENT_PREFERENCE = _class.staticFieldId(
    r'CATEGORY_DEVELOPMENT_PREFERENCE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_DEVELOPMENT_PREFERENCE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_DEVELOPMENT_PREFERENCE =>
      _id_CATEGORY_DEVELOPMENT_PREFERENCE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_EMBED = _class.staticFieldId(
    r'CATEGORY_EMBED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_EMBED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_EMBED =>
      _id_CATEGORY_EMBED.get(_class, const jni.JStringType());

  static final _id_CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST =
      _class.staticFieldId(
    r'CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST =>
      _id_CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST.get(
          _class, const jni.JStringType());

  static final _id_CATEGORY_HE_DESK_DOCK = _class.staticFieldId(
    r'CATEGORY_HE_DESK_DOCK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_HE_DESK_DOCK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_HE_DESK_DOCK =>
      _id_CATEGORY_HE_DESK_DOCK.get(_class, const jni.JStringType());

  static final _id_CATEGORY_HOME = _class.staticFieldId(
    r'CATEGORY_HOME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_HOME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_HOME =>
      _id_CATEGORY_HOME.get(_class, const jni.JStringType());

  static final _id_CATEGORY_INFO = _class.staticFieldId(
    r'CATEGORY_INFO',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_INFO`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_INFO =>
      _id_CATEGORY_INFO.get(_class, const jni.JStringType());

  static final _id_CATEGORY_LAUNCHER = _class.staticFieldId(
    r'CATEGORY_LAUNCHER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_LAUNCHER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_LAUNCHER =>
      _id_CATEGORY_LAUNCHER.get(_class, const jni.JStringType());

  static final _id_CATEGORY_LEANBACK_LAUNCHER = _class.staticFieldId(
    r'CATEGORY_LEANBACK_LAUNCHER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_LEANBACK_LAUNCHER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_LEANBACK_LAUNCHER =>
      _id_CATEGORY_LEANBACK_LAUNCHER.get(_class, const jni.JStringType());

  static final _id_CATEGORY_LE_DESK_DOCK = _class.staticFieldId(
    r'CATEGORY_LE_DESK_DOCK',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_LE_DESK_DOCK`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_LE_DESK_DOCK =>
      _id_CATEGORY_LE_DESK_DOCK.get(_class, const jni.JStringType());

  static final _id_CATEGORY_MONKEY = _class.staticFieldId(
    r'CATEGORY_MONKEY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_MONKEY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_MONKEY =>
      _id_CATEGORY_MONKEY.get(_class, const jni.JStringType());

  static final _id_CATEGORY_OPENABLE = _class.staticFieldId(
    r'CATEGORY_OPENABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_OPENABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_OPENABLE =>
      _id_CATEGORY_OPENABLE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_PREFERENCE = _class.staticFieldId(
    r'CATEGORY_PREFERENCE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_PREFERENCE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_PREFERENCE =>
      _id_CATEGORY_PREFERENCE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_SAMPLE_CODE = _class.staticFieldId(
    r'CATEGORY_SAMPLE_CODE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_SAMPLE_CODE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_SAMPLE_CODE =>
      _id_CATEGORY_SAMPLE_CODE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_SECONDARY_HOME = _class.staticFieldId(
    r'CATEGORY_SECONDARY_HOME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_SECONDARY_HOME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_SECONDARY_HOME =>
      _id_CATEGORY_SECONDARY_HOME.get(_class, const jni.JStringType());

  static final _id_CATEGORY_SELECTED_ALTERNATIVE = _class.staticFieldId(
    r'CATEGORY_SELECTED_ALTERNATIVE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_SELECTED_ALTERNATIVE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_SELECTED_ALTERNATIVE =>
      _id_CATEGORY_SELECTED_ALTERNATIVE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_TAB = _class.staticFieldId(
    r'CATEGORY_TAB',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_TAB`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_TAB =>
      _id_CATEGORY_TAB.get(_class, const jni.JStringType());

  static final _id_CATEGORY_TEST = _class.staticFieldId(
    r'CATEGORY_TEST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_TEST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_TEST =>
      _id_CATEGORY_TEST.get(_class, const jni.JStringType());

  static final _id_CATEGORY_TYPED_OPENABLE = _class.staticFieldId(
    r'CATEGORY_TYPED_OPENABLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_TYPED_OPENABLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_TYPED_OPENABLE =>
      _id_CATEGORY_TYPED_OPENABLE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_UNIT_TEST = _class.staticFieldId(
    r'CATEGORY_UNIT_TEST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_UNIT_TEST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_UNIT_TEST =>
      _id_CATEGORY_UNIT_TEST.get(_class, const jni.JStringType());

  static final _id_CATEGORY_VOICE = _class.staticFieldId(
    r'CATEGORY_VOICE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_VOICE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_VOICE =>
      _id_CATEGORY_VOICE.get(_class, const jni.JStringType());

  static final _id_CATEGORY_VR_HOME = _class.staticFieldId(
    r'CATEGORY_VR_HOME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String CATEGORY_VR_HOME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get CATEGORY_VR_HOME =>
      _id_CATEGORY_VR_HOME.get(_class, const jni.JStringType());

  static final _id_CREATOR = _class.staticFieldId(
    r'CREATOR',
    r'Landroid/os/Parcelable$Creator;',
  );

  /// from: `static public final android.os.Parcelable$Creator CREATOR`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      _id_CREATOR.get(_class, const jni.JObjectType());

  static final _id_EXTRA_ALARM_COUNT = _class.staticFieldId(
    r'EXTRA_ALARM_COUNT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ALARM_COUNT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ALARM_COUNT =>
      _id_EXTRA_ALARM_COUNT.get(_class, const jni.JStringType());

  static final _id_EXTRA_ALLOW_MULTIPLE = _class.staticFieldId(
    r'EXTRA_ALLOW_MULTIPLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ALLOW_MULTIPLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ALLOW_MULTIPLE =>
      _id_EXTRA_ALLOW_MULTIPLE.get(_class, const jni.JStringType());

  static final _id_EXTRA_ALLOW_REPLACE = _class.staticFieldId(
    r'EXTRA_ALLOW_REPLACE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ALLOW_REPLACE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ALLOW_REPLACE =>
      _id_EXTRA_ALLOW_REPLACE.get(_class, const jni.JStringType());

  static final _id_EXTRA_ALTERNATE_INTENTS = _class.staticFieldId(
    r'EXTRA_ALTERNATE_INTENTS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ALTERNATE_INTENTS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ALTERNATE_INTENTS =>
      _id_EXTRA_ALTERNATE_INTENTS.get(_class, const jni.JStringType());

  static final _id_EXTRA_ASSIST_CONTEXT = _class.staticFieldId(
    r'EXTRA_ASSIST_CONTEXT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ASSIST_CONTEXT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ASSIST_CONTEXT =>
      _id_EXTRA_ASSIST_CONTEXT.get(_class, const jni.JStringType());

  static final _id_EXTRA_ASSIST_INPUT_DEVICE_ID = _class.staticFieldId(
    r'EXTRA_ASSIST_INPUT_DEVICE_ID',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ASSIST_INPUT_DEVICE_ID`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ASSIST_INPUT_DEVICE_ID =>
      _id_EXTRA_ASSIST_INPUT_DEVICE_ID.get(_class, const jni.JStringType());

  static final _id_EXTRA_ASSIST_INPUT_HINT_KEYBOARD = _class.staticFieldId(
    r'EXTRA_ASSIST_INPUT_HINT_KEYBOARD',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ASSIST_INPUT_HINT_KEYBOARD`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ASSIST_INPUT_HINT_KEYBOARD =>
      _id_EXTRA_ASSIST_INPUT_HINT_KEYBOARD.get(_class, const jni.JStringType());

  static final _id_EXTRA_ASSIST_PACKAGE = _class.staticFieldId(
    r'EXTRA_ASSIST_PACKAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ASSIST_PACKAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ASSIST_PACKAGE =>
      _id_EXTRA_ASSIST_PACKAGE.get(_class, const jni.JStringType());

  static final _id_EXTRA_ASSIST_UID = _class.staticFieldId(
    r'EXTRA_ASSIST_UID',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ASSIST_UID`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ASSIST_UID =>
      _id_EXTRA_ASSIST_UID.get(_class, const jni.JStringType());

  static final _id_EXTRA_ATTRIBUTION_TAGS = _class.staticFieldId(
    r'EXTRA_ATTRIBUTION_TAGS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ATTRIBUTION_TAGS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ATTRIBUTION_TAGS =>
      _id_EXTRA_ATTRIBUTION_TAGS.get(_class, const jni.JStringType());

  static final _id_EXTRA_AUTO_LAUNCH_SINGLE_CHOICE = _class.staticFieldId(
    r'EXTRA_AUTO_LAUNCH_SINGLE_CHOICE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_AUTO_LAUNCH_SINGLE_CHOICE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_AUTO_LAUNCH_SINGLE_CHOICE =>
      _id_EXTRA_AUTO_LAUNCH_SINGLE_CHOICE.get(_class, const jni.JStringType());

  static final _id_EXTRA_BCC = _class.staticFieldId(
    r'EXTRA_BCC',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_BCC`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_BCC =>
      _id_EXTRA_BCC.get(_class, const jni.JStringType());

  static final _id_EXTRA_BUG_REPORT = _class.staticFieldId(
    r'EXTRA_BUG_REPORT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_BUG_REPORT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_BUG_REPORT =>
      _id_EXTRA_BUG_REPORT.get(_class, const jni.JStringType());

  static final _id_EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE =
      _class.staticFieldId(
    r'EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE =>
      _id_EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE.get(
          _class, const jni.JStringType());

  static final _id_EXTRA_CC = _class.staticFieldId(
    r'EXTRA_CC',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CC`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CC =>
      _id_EXTRA_CC.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHANGED_COMPONENT_NAME = _class.staticFieldId(
    r'EXTRA_CHANGED_COMPONENT_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHANGED_COMPONENT_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHANGED_COMPONENT_NAME =>
      _id_EXTRA_CHANGED_COMPONENT_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHANGED_COMPONENT_NAME_LIST = _class.staticFieldId(
    r'EXTRA_CHANGED_COMPONENT_NAME_LIST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHANGED_COMPONENT_NAME_LIST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHANGED_COMPONENT_NAME_LIST =>
      _id_EXTRA_CHANGED_COMPONENT_NAME_LIST.get(
          _class, const jni.JStringType());

  static final _id_EXTRA_CHANGED_PACKAGE_LIST = _class.staticFieldId(
    r'EXTRA_CHANGED_PACKAGE_LIST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHANGED_PACKAGE_LIST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHANGED_PACKAGE_LIST =>
      _id_EXTRA_CHANGED_PACKAGE_LIST.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHANGED_UID_LIST = _class.staticFieldId(
    r'EXTRA_CHANGED_UID_LIST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHANGED_UID_LIST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHANGED_UID_LIST =>
      _id_EXTRA_CHANGED_UID_LIST.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHOOSER_CUSTOM_ACTIONS = _class.staticFieldId(
    r'EXTRA_CHOOSER_CUSTOM_ACTIONS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHOOSER_CUSTOM_ACTIONS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHOOSER_CUSTOM_ACTIONS =>
      _id_EXTRA_CHOOSER_CUSTOM_ACTIONS.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHOOSER_MODIFY_SHARE_ACTION = _class.staticFieldId(
    r'EXTRA_CHOOSER_MODIFY_SHARE_ACTION',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHOOSER_MODIFY_SHARE_ACTION`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHOOSER_MODIFY_SHARE_ACTION =>
      _id_EXTRA_CHOOSER_MODIFY_SHARE_ACTION.get(
          _class, const jni.JStringType());

  static final _id_EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER =
      _class.staticFieldId(
    r'EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER =>
      _id_EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER.get(
          _class, const jni.JStringType());

  static final _id_EXTRA_CHOOSER_TARGETS = _class.staticFieldId(
    r'EXTRA_CHOOSER_TARGETS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHOOSER_TARGETS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHOOSER_TARGETS =>
      _id_EXTRA_CHOOSER_TARGETS.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHOSEN_COMPONENT = _class.staticFieldId(
    r'EXTRA_CHOSEN_COMPONENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHOSEN_COMPONENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHOSEN_COMPONENT =>
      _id_EXTRA_CHOSEN_COMPONENT.get(_class, const jni.JStringType());

  static final _id_EXTRA_CHOSEN_COMPONENT_INTENT_SENDER = _class.staticFieldId(
    r'EXTRA_CHOSEN_COMPONENT_INTENT_SENDER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CHOSEN_COMPONENT_INTENT_SENDER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CHOSEN_COMPONENT_INTENT_SENDER =>
      _id_EXTRA_CHOSEN_COMPONENT_INTENT_SENDER.get(
          _class, const jni.JStringType());

  static final _id_EXTRA_COMPONENT_NAME = _class.staticFieldId(
    r'EXTRA_COMPONENT_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_COMPONENT_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_COMPONENT_NAME =>
      _id_EXTRA_COMPONENT_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_CONTENT_ANNOTATIONS = _class.staticFieldId(
    r'EXTRA_CONTENT_ANNOTATIONS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CONTENT_ANNOTATIONS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CONTENT_ANNOTATIONS =>
      _id_EXTRA_CONTENT_ANNOTATIONS.get(_class, const jni.JStringType());

  static final _id_EXTRA_CONTENT_QUERY = _class.staticFieldId(
    r'EXTRA_CONTENT_QUERY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_CONTENT_QUERY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_CONTENT_QUERY =>
      _id_EXTRA_CONTENT_QUERY.get(_class, const jni.JStringType());

  static final _id_EXTRA_DATA_REMOVED = _class.staticFieldId(
    r'EXTRA_DATA_REMOVED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_DATA_REMOVED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_DATA_REMOVED =>
      _id_EXTRA_DATA_REMOVED.get(_class, const jni.JStringType());

  static final _id_EXTRA_DOCK_STATE = _class.staticFieldId(
    r'EXTRA_DOCK_STATE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_DOCK_STATE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_DOCK_STATE =>
      _id_EXTRA_DOCK_STATE.get(_class, const jni.JStringType());

  /// from: `static public final int EXTRA_DOCK_STATE_CAR`
  static const EXTRA_DOCK_STATE_CAR = 2;

  /// from: `static public final int EXTRA_DOCK_STATE_DESK`
  static const EXTRA_DOCK_STATE_DESK = 1;

  /// from: `static public final int EXTRA_DOCK_STATE_HE_DESK`
  static const EXTRA_DOCK_STATE_HE_DESK = 4;

  /// from: `static public final int EXTRA_DOCK_STATE_LE_DESK`
  static const EXTRA_DOCK_STATE_LE_DESK = 3;

  /// from: `static public final int EXTRA_DOCK_STATE_UNDOCKED`
  static const EXTRA_DOCK_STATE_UNDOCKED = 0;
  static final _id_EXTRA_DONT_KILL_APP = _class.staticFieldId(
    r'EXTRA_DONT_KILL_APP',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_DONT_KILL_APP`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_DONT_KILL_APP =>
      _id_EXTRA_DONT_KILL_APP.get(_class, const jni.JStringType());

  static final _id_EXTRA_DURATION_MILLIS = _class.staticFieldId(
    r'EXTRA_DURATION_MILLIS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_DURATION_MILLIS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_DURATION_MILLIS =>
      _id_EXTRA_DURATION_MILLIS.get(_class, const jni.JStringType());

  static final _id_EXTRA_EMAIL = _class.staticFieldId(
    r'EXTRA_EMAIL',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_EMAIL`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_EMAIL =>
      _id_EXTRA_EMAIL.get(_class, const jni.JStringType());

  static final _id_EXTRA_END_TIME = _class.staticFieldId(
    r'EXTRA_END_TIME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_END_TIME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_END_TIME =>
      _id_EXTRA_END_TIME.get(_class, const jni.JStringType());

  static final _id_EXTRA_EXCLUDE_COMPONENTS = _class.staticFieldId(
    r'EXTRA_EXCLUDE_COMPONENTS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_EXCLUDE_COMPONENTS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_EXCLUDE_COMPONENTS =>
      _id_EXTRA_EXCLUDE_COMPONENTS.get(_class, const jni.JStringType());

  static final _id_EXTRA_FROM_STORAGE = _class.staticFieldId(
    r'EXTRA_FROM_STORAGE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_FROM_STORAGE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_FROM_STORAGE =>
      _id_EXTRA_FROM_STORAGE.get(_class, const jni.JStringType());

  static final _id_EXTRA_HTML_TEXT = _class.staticFieldId(
    r'EXTRA_HTML_TEXT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_HTML_TEXT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_HTML_TEXT =>
      _id_EXTRA_HTML_TEXT.get(_class, const jni.JStringType());

  static final _id_EXTRA_INDEX = _class.staticFieldId(
    r'EXTRA_INDEX',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_INDEX`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_INDEX =>
      _id_EXTRA_INDEX.get(_class, const jni.JStringType());

  static final _id_EXTRA_INITIAL_INTENTS = _class.staticFieldId(
    r'EXTRA_INITIAL_INTENTS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_INITIAL_INTENTS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_INITIAL_INTENTS =>
      _id_EXTRA_INITIAL_INTENTS.get(_class, const jni.JStringType());

  static final _id_EXTRA_INSTALLER_PACKAGE_NAME = _class.staticFieldId(
    r'EXTRA_INSTALLER_PACKAGE_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_INSTALLER_PACKAGE_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_INSTALLER_PACKAGE_NAME =>
      _id_EXTRA_INSTALLER_PACKAGE_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_INTENT = _class.staticFieldId(
    r'EXTRA_INTENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_INTENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_INTENT =>
      _id_EXTRA_INTENT.get(_class, const jni.JStringType());

  static final _id_EXTRA_KEY_EVENT = _class.staticFieldId(
    r'EXTRA_KEY_EVENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_KEY_EVENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_KEY_EVENT =>
      _id_EXTRA_KEY_EVENT.get(_class, const jni.JStringType());

  static final _id_EXTRA_LOCALE_LIST = _class.staticFieldId(
    r'EXTRA_LOCALE_LIST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_LOCALE_LIST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_LOCALE_LIST =>
      _id_EXTRA_LOCALE_LIST.get(_class, const jni.JStringType());

  static final _id_EXTRA_LOCAL_ONLY = _class.staticFieldId(
    r'EXTRA_LOCAL_ONLY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_LOCAL_ONLY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_LOCAL_ONLY =>
      _id_EXTRA_LOCAL_ONLY.get(_class, const jni.JStringType());

  static final _id_EXTRA_LOCUS_ID = _class.staticFieldId(
    r'EXTRA_LOCUS_ID',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_LOCUS_ID`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_LOCUS_ID =>
      _id_EXTRA_LOCUS_ID.get(_class, const jni.JStringType());

  static final _id_EXTRA_MIME_TYPES = _class.staticFieldId(
    r'EXTRA_MIME_TYPES',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_MIME_TYPES`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_MIME_TYPES =>
      _id_EXTRA_MIME_TYPES.get(_class, const jni.JStringType());

  static final _id_EXTRA_NOT_UNKNOWN_SOURCE = _class.staticFieldId(
    r'EXTRA_NOT_UNKNOWN_SOURCE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_NOT_UNKNOWN_SOURCE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_NOT_UNKNOWN_SOURCE =>
      _id_EXTRA_NOT_UNKNOWN_SOURCE.get(_class, const jni.JStringType());

  static final _id_EXTRA_ORIGINATING_URI = _class.staticFieldId(
    r'EXTRA_ORIGINATING_URI',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_ORIGINATING_URI`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_ORIGINATING_URI =>
      _id_EXTRA_ORIGINATING_URI.get(_class, const jni.JStringType());

  static final _id_EXTRA_PACKAGES = _class.staticFieldId(
    r'EXTRA_PACKAGES',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_PACKAGES`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_PACKAGES =>
      _id_EXTRA_PACKAGES.get(_class, const jni.JStringType());

  static final _id_EXTRA_PACKAGE_NAME = _class.staticFieldId(
    r'EXTRA_PACKAGE_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_PACKAGE_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_PACKAGE_NAME =>
      _id_EXTRA_PACKAGE_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_PERMISSION_GROUP_NAME = _class.staticFieldId(
    r'EXTRA_PERMISSION_GROUP_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_PERMISSION_GROUP_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_PERMISSION_GROUP_NAME =>
      _id_EXTRA_PERMISSION_GROUP_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_PHONE_NUMBER = _class.staticFieldId(
    r'EXTRA_PHONE_NUMBER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_PHONE_NUMBER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_PHONE_NUMBER =>
      _id_EXTRA_PHONE_NUMBER.get(_class, const jni.JStringType());

  static final _id_EXTRA_PROCESS_TEXT = _class.staticFieldId(
    r'EXTRA_PROCESS_TEXT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_PROCESS_TEXT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_PROCESS_TEXT =>
      _id_EXTRA_PROCESS_TEXT.get(_class, const jni.JStringType());

  static final _id_EXTRA_PROCESS_TEXT_READONLY = _class.staticFieldId(
    r'EXTRA_PROCESS_TEXT_READONLY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_PROCESS_TEXT_READONLY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_PROCESS_TEXT_READONLY =>
      _id_EXTRA_PROCESS_TEXT_READONLY.get(_class, const jni.JStringType());

  static final _id_EXTRA_QUICK_VIEW_FEATURES = _class.staticFieldId(
    r'EXTRA_QUICK_VIEW_FEATURES',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_QUICK_VIEW_FEATURES`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_QUICK_VIEW_FEATURES =>
      _id_EXTRA_QUICK_VIEW_FEATURES.get(_class, const jni.JStringType());

  static final _id_EXTRA_QUIET_MODE = _class.staticFieldId(
    r'EXTRA_QUIET_MODE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_QUIET_MODE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_QUIET_MODE =>
      _id_EXTRA_QUIET_MODE.get(_class, const jni.JStringType());

  static final _id_EXTRA_REFERRER = _class.staticFieldId(
    r'EXTRA_REFERRER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_REFERRER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_REFERRER =>
      _id_EXTRA_REFERRER.get(_class, const jni.JStringType());

  static final _id_EXTRA_REFERRER_NAME = _class.staticFieldId(
    r'EXTRA_REFERRER_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_REFERRER_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_REFERRER_NAME =>
      _id_EXTRA_REFERRER_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_REMOTE_INTENT_TOKEN = _class.staticFieldId(
    r'EXTRA_REMOTE_INTENT_TOKEN',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_REMOTE_INTENT_TOKEN`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_REMOTE_INTENT_TOKEN =>
      _id_EXTRA_REMOTE_INTENT_TOKEN.get(_class, const jni.JStringType());

  static final _id_EXTRA_REPLACEMENT_EXTRAS = _class.staticFieldId(
    r'EXTRA_REPLACEMENT_EXTRAS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_REPLACEMENT_EXTRAS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_REPLACEMENT_EXTRAS =>
      _id_EXTRA_REPLACEMENT_EXTRAS.get(_class, const jni.JStringType());

  static final _id_EXTRA_REPLACING = _class.staticFieldId(
    r'EXTRA_REPLACING',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_REPLACING`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_REPLACING =>
      _id_EXTRA_REPLACING.get(_class, const jni.JStringType());

  static final _id_EXTRA_RESTRICTIONS_BUNDLE = _class.staticFieldId(
    r'EXTRA_RESTRICTIONS_BUNDLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_RESTRICTIONS_BUNDLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_RESTRICTIONS_BUNDLE =>
      _id_EXTRA_RESTRICTIONS_BUNDLE.get(_class, const jni.JStringType());

  static final _id_EXTRA_RESTRICTIONS_INTENT = _class.staticFieldId(
    r'EXTRA_RESTRICTIONS_INTENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_RESTRICTIONS_INTENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_RESTRICTIONS_INTENT =>
      _id_EXTRA_RESTRICTIONS_INTENT.get(_class, const jni.JStringType());

  static final _id_EXTRA_RESTRICTIONS_LIST = _class.staticFieldId(
    r'EXTRA_RESTRICTIONS_LIST',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_RESTRICTIONS_LIST`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_RESTRICTIONS_LIST =>
      _id_EXTRA_RESTRICTIONS_LIST.get(_class, const jni.JStringType());

  static final _id_EXTRA_RESULT_RECEIVER = _class.staticFieldId(
    r'EXTRA_RESULT_RECEIVER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_RESULT_RECEIVER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_RESULT_RECEIVER =>
      _id_EXTRA_RESULT_RECEIVER.get(_class, const jni.JStringType());

  static final _id_EXTRA_RETURN_RESULT = _class.staticFieldId(
    r'EXTRA_RETURN_RESULT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_RETURN_RESULT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_RETURN_RESULT =>
      _id_EXTRA_RETURN_RESULT.get(_class, const jni.JStringType());

  static final _id_EXTRA_SHORTCUT_ICON = _class.staticFieldId(
    r'EXTRA_SHORTCUT_ICON',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SHORTCUT_ICON`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SHORTCUT_ICON =>
      _id_EXTRA_SHORTCUT_ICON.get(_class, const jni.JStringType());

  static final _id_EXTRA_SHORTCUT_ICON_RESOURCE = _class.staticFieldId(
    r'EXTRA_SHORTCUT_ICON_RESOURCE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SHORTCUT_ICON_RESOURCE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SHORTCUT_ICON_RESOURCE =>
      _id_EXTRA_SHORTCUT_ICON_RESOURCE.get(_class, const jni.JStringType());

  static final _id_EXTRA_SHORTCUT_ID = _class.staticFieldId(
    r'EXTRA_SHORTCUT_ID',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SHORTCUT_ID`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SHORTCUT_ID =>
      _id_EXTRA_SHORTCUT_ID.get(_class, const jni.JStringType());

  static final _id_EXTRA_SHORTCUT_INTENT = _class.staticFieldId(
    r'EXTRA_SHORTCUT_INTENT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SHORTCUT_INTENT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SHORTCUT_INTENT =>
      _id_EXTRA_SHORTCUT_INTENT.get(_class, const jni.JStringType());

  static final _id_EXTRA_SHORTCUT_NAME = _class.staticFieldId(
    r'EXTRA_SHORTCUT_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SHORTCUT_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SHORTCUT_NAME =>
      _id_EXTRA_SHORTCUT_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_SHUTDOWN_USERSPACE_ONLY = _class.staticFieldId(
    r'EXTRA_SHUTDOWN_USERSPACE_ONLY',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SHUTDOWN_USERSPACE_ONLY`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SHUTDOWN_USERSPACE_ONLY =>
      _id_EXTRA_SHUTDOWN_USERSPACE_ONLY.get(_class, const jni.JStringType());

  static final _id_EXTRA_SPLIT_NAME = _class.staticFieldId(
    r'EXTRA_SPLIT_NAME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SPLIT_NAME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SPLIT_NAME =>
      _id_EXTRA_SPLIT_NAME.get(_class, const jni.JStringType());

  static final _id_EXTRA_START_TIME = _class.staticFieldId(
    r'EXTRA_START_TIME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_START_TIME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_START_TIME =>
      _id_EXTRA_START_TIME.get(_class, const jni.JStringType());

  static final _id_EXTRA_STREAM = _class.staticFieldId(
    r'EXTRA_STREAM',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_STREAM`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_STREAM =>
      _id_EXTRA_STREAM.get(_class, const jni.JStringType());

  static final _id_EXTRA_SUBJECT = _class.staticFieldId(
    r'EXTRA_SUBJECT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SUBJECT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SUBJECT =>
      _id_EXTRA_SUBJECT.get(_class, const jni.JStringType());

  static final _id_EXTRA_SUSPENDED_PACKAGE_EXTRAS = _class.staticFieldId(
    r'EXTRA_SUSPENDED_PACKAGE_EXTRAS',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_SUSPENDED_PACKAGE_EXTRAS`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_SUSPENDED_PACKAGE_EXTRAS =>
      _id_EXTRA_SUSPENDED_PACKAGE_EXTRAS.get(_class, const jni.JStringType());

  static final _id_EXTRA_TEMPLATE = _class.staticFieldId(
    r'EXTRA_TEMPLATE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_TEMPLATE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_TEMPLATE =>
      _id_EXTRA_TEMPLATE.get(_class, const jni.JStringType());

  static final _id_EXTRA_TEXT = _class.staticFieldId(
    r'EXTRA_TEXT',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_TEXT`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_TEXT =>
      _id_EXTRA_TEXT.get(_class, const jni.JStringType());

  static final _id_EXTRA_TIME = _class.staticFieldId(
    r'EXTRA_TIME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_TIME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_TIME =>
      _id_EXTRA_TIME.get(_class, const jni.JStringType());

  static final _id_EXTRA_TIMEZONE = _class.staticFieldId(
    r'EXTRA_TIMEZONE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_TIMEZONE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_TIMEZONE =>
      _id_EXTRA_TIMEZONE.get(_class, const jni.JStringType());

  static final _id_EXTRA_TITLE = _class.staticFieldId(
    r'EXTRA_TITLE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_TITLE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_TITLE =>
      _id_EXTRA_TITLE.get(_class, const jni.JStringType());

  static final _id_EXTRA_UID = _class.staticFieldId(
    r'EXTRA_UID',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_UID`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_UID =>
      _id_EXTRA_UID.get(_class, const jni.JStringType());

  static final _id_EXTRA_USER = _class.staticFieldId(
    r'EXTRA_USER',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_USER`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_USER =>
      _id_EXTRA_USER.get(_class, const jni.JStringType());

  static final _id_EXTRA_USER_INITIATED = _class.staticFieldId(
    r'EXTRA_USER_INITIATED',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_USER_INITIATED`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_USER_INITIATED =>
      _id_EXTRA_USER_INITIATED.get(_class, const jni.JStringType());

  static final _id_EXTRA_USE_STYLUS_MODE = _class.staticFieldId(
    r'EXTRA_USE_STYLUS_MODE',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String EXTRA_USE_STYLUS_MODE`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get EXTRA_USE_STYLUS_MODE =>
      _id_EXTRA_USE_STYLUS_MODE.get(_class, const jni.JStringType());

  /// from: `static public final int FILL_IN_ACTION`
  static const FILL_IN_ACTION = 1;

  /// from: `static public final int FILL_IN_CATEGORIES`
  static const FILL_IN_CATEGORIES = 4;

  /// from: `static public final int FILL_IN_CLIP_DATA`
  static const FILL_IN_CLIP_DATA = 128;

  /// from: `static public final int FILL_IN_COMPONENT`
  static const FILL_IN_COMPONENT = 8;

  /// from: `static public final int FILL_IN_DATA`
  static const FILL_IN_DATA = 2;

  /// from: `static public final int FILL_IN_IDENTIFIER`
  static const FILL_IN_IDENTIFIER = 256;

  /// from: `static public final int FILL_IN_PACKAGE`
  static const FILL_IN_PACKAGE = 16;

  /// from: `static public final int FILL_IN_SELECTOR`
  static const FILL_IN_SELECTOR = 64;

  /// from: `static public final int FILL_IN_SOURCE_BOUNDS`
  static const FILL_IN_SOURCE_BOUNDS = 32;

  /// from: `static public final int FLAG_ACTIVITY_BROUGHT_TO_FRONT`
  static const FLAG_ACTIVITY_BROUGHT_TO_FRONT = 4194304;

  /// from: `static public final int FLAG_ACTIVITY_CLEAR_TASK`
  static const FLAG_ACTIVITY_CLEAR_TASK = 32768;

  /// from: `static public final int FLAG_ACTIVITY_CLEAR_TOP`
  static const FLAG_ACTIVITY_CLEAR_TOP = 67108864;

  /// from: `static public final int FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET`
  static const FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET = 524288;

  /// from: `static public final int FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS`
  static const FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS = 8388608;

  /// from: `static public final int FLAG_ACTIVITY_FORWARD_RESULT`
  static const FLAG_ACTIVITY_FORWARD_RESULT = 33554432;

  /// from: `static public final int FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY`
  static const FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY = 1048576;

  /// from: `static public final int FLAG_ACTIVITY_LAUNCH_ADJACENT`
  static const FLAG_ACTIVITY_LAUNCH_ADJACENT = 4096;

  /// from: `static public final int FLAG_ACTIVITY_MATCH_EXTERNAL`
  static const FLAG_ACTIVITY_MATCH_EXTERNAL = 2048;

  /// from: `static public final int FLAG_ACTIVITY_MULTIPLE_TASK`
  static const FLAG_ACTIVITY_MULTIPLE_TASK = 134217728;

  /// from: `static public final int FLAG_ACTIVITY_NEW_DOCUMENT`
  static const FLAG_ACTIVITY_NEW_DOCUMENT = 524288;

  /// from: `static public final int FLAG_ACTIVITY_NEW_TASK`
  static const FLAG_ACTIVITY_NEW_TASK = 268435456;

  /// from: `static public final int FLAG_ACTIVITY_NO_ANIMATION`
  static const FLAG_ACTIVITY_NO_ANIMATION = 65536;

  /// from: `static public final int FLAG_ACTIVITY_NO_HISTORY`
  static const FLAG_ACTIVITY_NO_HISTORY = 1073741824;

  /// from: `static public final int FLAG_ACTIVITY_NO_USER_ACTION`
  static const FLAG_ACTIVITY_NO_USER_ACTION = 262144;

  /// from: `static public final int FLAG_ACTIVITY_PREVIOUS_IS_TOP`
  static const FLAG_ACTIVITY_PREVIOUS_IS_TOP = 16777216;

  /// from: `static public final int FLAG_ACTIVITY_REORDER_TO_FRONT`
  static const FLAG_ACTIVITY_REORDER_TO_FRONT = 131072;

  /// from: `static public final int FLAG_ACTIVITY_REQUIRE_DEFAULT`
  static const FLAG_ACTIVITY_REQUIRE_DEFAULT = 512;

  /// from: `static public final int FLAG_ACTIVITY_REQUIRE_NON_BROWSER`
  static const FLAG_ACTIVITY_REQUIRE_NON_BROWSER = 1024;

  /// from: `static public final int FLAG_ACTIVITY_RESET_TASK_IF_NEEDED`
  static const FLAG_ACTIVITY_RESET_TASK_IF_NEEDED = 2097152;

  /// from: `static public final int FLAG_ACTIVITY_RETAIN_IN_RECENTS`
  static const FLAG_ACTIVITY_RETAIN_IN_RECENTS = 8192;

  /// from: `static public final int FLAG_ACTIVITY_SINGLE_TOP`
  static const FLAG_ACTIVITY_SINGLE_TOP = 536870912;

  /// from: `static public final int FLAG_ACTIVITY_TASK_ON_HOME`
  static const FLAG_ACTIVITY_TASK_ON_HOME = 16384;

  /// from: `static public final int FLAG_DEBUG_LOG_RESOLUTION`
  static const FLAG_DEBUG_LOG_RESOLUTION = 8;

  /// from: `static public final int FLAG_DIRECT_BOOT_AUTO`
  static const FLAG_DIRECT_BOOT_AUTO = 256;

  /// from: `static public final int FLAG_EXCLUDE_STOPPED_PACKAGES`
  static const FLAG_EXCLUDE_STOPPED_PACKAGES = 16;

  /// from: `static public final int FLAG_FROM_BACKGROUND`
  static const FLAG_FROM_BACKGROUND = 4;

  /// from: `static public final int FLAG_GRANT_PERSISTABLE_URI_PERMISSION`
  static const FLAG_GRANT_PERSISTABLE_URI_PERMISSION = 64;

  /// from: `static public final int FLAG_GRANT_PREFIX_URI_PERMISSION`
  static const FLAG_GRANT_PREFIX_URI_PERMISSION = 128;

  /// from: `static public final int FLAG_GRANT_READ_URI_PERMISSION`
  static const FLAG_GRANT_READ_URI_PERMISSION = 1;

  /// from: `static public final int FLAG_GRANT_WRITE_URI_PERMISSION`
  static const FLAG_GRANT_WRITE_URI_PERMISSION = 2;

  /// from: `static public final int FLAG_INCLUDE_STOPPED_PACKAGES`
  static const FLAG_INCLUDE_STOPPED_PACKAGES = 32;

  /// from: `static public final int FLAG_RECEIVER_FOREGROUND`
  static const FLAG_RECEIVER_FOREGROUND = 268435456;

  /// from: `static public final int FLAG_RECEIVER_NO_ABORT`
  static const FLAG_RECEIVER_NO_ABORT = 134217728;

  /// from: `static public final int FLAG_RECEIVER_REGISTERED_ONLY`
  static const FLAG_RECEIVER_REGISTERED_ONLY = 1073741824;

  /// from: `static public final int FLAG_RECEIVER_REPLACE_PENDING`
  static const FLAG_RECEIVER_REPLACE_PENDING = 536870912;

  /// from: `static public final int FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS`
  static const FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS = 2097152;
  static final _id_METADATA_DOCK_HOME = _class.staticFieldId(
    r'METADATA_DOCK_HOME',
    r'Ljava/lang/String;',
  );

  /// from: `static public final java.lang.String METADATA_DOCK_HOME`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString get METADATA_DOCK_HOME =>
      _id_METADATA_DOCK_HOME.get(_class, const jni.JStringType());

  /// from: `static public final int URI_ALLOW_UNSAFE`
  static const URI_ALLOW_UNSAFE = 4;

  /// from: `static public final int URI_ANDROID_APP_SCHEME`
  static const URI_ANDROID_APP_SCHEME = 2;

  /// from: `static public final int URI_INTENT_SCHEME`
  static const URI_INTENT_SCHEME = 1;
  static final _id_new0 = _class.constructorId(
    r'()V',
  );

  static final _new0 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent() {
    return Intent.fromReference(
        _new0(_class.reference.pointer, _id_new0 as jni.JMethodIDPtr)
            .reference);
  }

  static final _id_new1 = _class.constructorId(
    r'(Landroid/content/Intent;)V',
  );

  static final _new1 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void <init>(android.content.Intent intent)`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new1(
    Intent intent,
  ) {
    return Intent.fromReference(_new1(_class.reference.pointer,
            _id_new1 as jni.JMethodIDPtr, intent.reference.pointer)
        .reference);
  }

  static final _id_new2 = _class.constructorId(
    r'(Ljava/lang/String;)V',
  );

  static final _new2 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void <init>(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new2(
    jni.JString string,
  ) {
    return Intent.fromReference(_new2(_class.reference.pointer,
            _id_new2 as jni.JMethodIDPtr, string.reference.pointer)
        .reference);
  }

  static final _id_new3 = _class.constructorId(
    r'(Ljava/lang/String;Landroid/net/Uri;)V',
  );

  static final _new3 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public void <init>(java.lang.String string, android.net.Uri uri)`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new3(
    jni.JString string,
    jni.JObject uri,
  ) {
    return Intent.fromReference(_new3(
            _class.reference.pointer,
            _id_new3 as jni.JMethodIDPtr,
            string.reference.pointer,
            uri.reference.pointer)
        .reference);
  }

  static final _id_new4 = _class.constructorId(
    r'(Landroid/content/Context;Ljava/lang/Class;)V',
  );

  static final _new4 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public void <init>(android.content.Context context, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new4(
    context_.Context context,
    jni.JObject class0,
  ) {
    return Intent.fromReference(_new4(
            _class.reference.pointer,
            _id_new4 as jni.JMethodIDPtr,
            context.reference.pointer,
            class0.reference.pointer)
        .reference);
  }

  static final _id_new5 = _class.constructorId(
    r'(Ljava/lang/String;Landroid/net/Uri;Landroid/content/Context;Ljava/lang/Class;)V',
  );

  static final _new5 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_NewObject')
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void <init>(java.lang.String string, android.net.Uri uri, android.content.Context context, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new5(
    jni.JString string,
    jni.JObject uri,
    context_.Context context,
    jni.JObject class0,
  ) {
    return Intent.fromReference(_new5(
            _class.reference.pointer,
            _id_new5 as jni.JMethodIDPtr,
            string.reference.pointer,
            uri.reference.pointer,
            context.reference.pointer,
            class0.reference.pointer)
        .reference);
  }

  static final _id_createChooser = _class.staticMethodId(
    r'createChooser',
    r'(Landroid/content/Intent;Ljava/lang/CharSequence;)Landroid/content/Intent;',
  );

  static final _createChooser = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent createChooser(android.content.Intent intent, java.lang.CharSequence charSequence)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent createChooser(
    Intent intent,
    jni.JObject charSequence,
  ) {
    return _createChooser(
            _class.reference.pointer,
            _id_createChooser as jni.JMethodIDPtr,
            intent.reference.pointer,
            charSequence.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_createChooser1 = _class.staticMethodId(
    r'createChooser',
    r'(Landroid/content/Intent;Ljava/lang/CharSequence;Landroid/content/IntentSender;)Landroid/content/Intent;',
  );

  static final _createChooser1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent createChooser(android.content.Intent intent, java.lang.CharSequence charSequence, android.content.IntentSender intentSender)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent createChooser1(
    Intent intent,
    jni.JObject charSequence,
    jni.JObject intentSender,
  ) {
    return _createChooser1(
            _class.reference.pointer,
            _id_createChooser1 as jni.JMethodIDPtr,
            intent.reference.pointer,
            charSequence.reference.pointer,
            intentSender.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_clone = _class.instanceMethodId(
    r'clone',
    r'()Ljava/lang/Object;',
  );

  static final _clone = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.Object clone()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject clone() {
    return _clone(reference.pointer, _id_clone as jni.JMethodIDPtr)
        .object(const jni.JObjectType());
  }

  static final _id_cloneFilter = _class.instanceMethodId(
    r'cloneFilter',
    r'()Landroid/content/Intent;',
  );

  static final _cloneFilter = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.content.Intent cloneFilter()`
  /// The returned object must be released after use, by calling the [release] method.
  Intent cloneFilter() {
    return _cloneFilter(reference.pointer, _id_cloneFilter as jni.JMethodIDPtr)
        .object(const $IntentType());
  }

  static final _id_makeMainActivity = _class.staticMethodId(
    r'makeMainActivity',
    r'(Landroid/content/ComponentName;)Landroid/content/Intent;',
  );

  static final _makeMainActivity = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent makeMainActivity(android.content.ComponentName componentName)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent makeMainActivity(
    jni.JObject componentName,
  ) {
    return _makeMainActivity(
            _class.reference.pointer,
            _id_makeMainActivity as jni.JMethodIDPtr,
            componentName.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_makeMainSelectorActivity = _class.staticMethodId(
    r'makeMainSelectorActivity',
    r'(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _makeMainSelectorActivity = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent makeMainSelectorActivity(java.lang.String string, java.lang.String string1)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent makeMainSelectorActivity(
    jni.JString string,
    jni.JString string1,
  ) {
    return _makeMainSelectorActivity(
            _class.reference.pointer,
            _id_makeMainSelectorActivity as jni.JMethodIDPtr,
            string.reference.pointer,
            string1.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_makeRestartActivityTask = _class.staticMethodId(
    r'makeRestartActivityTask',
    r'(Landroid/content/ComponentName;)Landroid/content/Intent;',
  );

  static final _makeRestartActivityTask = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent makeRestartActivityTask(android.content.ComponentName componentName)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent makeRestartActivityTask(
    jni.JObject componentName,
  ) {
    return _makeRestartActivityTask(
            _class.reference.pointer,
            _id_makeRestartActivityTask as jni.JMethodIDPtr,
            componentName.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_getIntent = _class.staticMethodId(
    r'getIntent',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _getIntent = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent getIntent(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent getIntent(
    jni.JString string,
  ) {
    return _getIntent(_class.reference.pointer,
            _id_getIntent as jni.JMethodIDPtr, string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_parseUri = _class.staticMethodId(
    r'parseUri',
    r'(Ljava/lang/String;I)Landroid/content/Intent;',
  );

  static final _parseUri = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `static public android.content.Intent parseUri(java.lang.String string, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent parseUri(
    jni.JString string,
    int i,
  ) {
    return _parseUri(_class.reference.pointer, _id_parseUri as jni.JMethodIDPtr,
            string.reference.pointer, i)
        .object(const $IntentType());
  }

  static final _id_getIntentOld = _class.staticMethodId(
    r'getIntentOld',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _getIntentOld = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent getIntentOld(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent getIntentOld(
    jni.JString string,
  ) {
    return _getIntentOld(_class.reference.pointer,
            _id_getIntentOld as jni.JMethodIDPtr, string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_getAction = _class.instanceMethodId(
    r'getAction',
    r'()Ljava/lang/String;',
  );

  static final _getAction = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String getAction()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAction() {
    return _getAction(reference.pointer, _id_getAction as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_getData = _class.instanceMethodId(
    r'getData',
    r'()Landroid/net/Uri;',
  );

  static final _getData = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.net.Uri getData()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getData() {
    return _getData(reference.pointer, _id_getData as jni.JMethodIDPtr)
        .object(const jni.JObjectType());
  }

  static final _id_getDataString = _class.instanceMethodId(
    r'getDataString',
    r'()Ljava/lang/String;',
  );

  static final _getDataString = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String getDataString()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getDataString() {
    return _getDataString(
            reference.pointer, _id_getDataString as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_getScheme = _class.instanceMethodId(
    r'getScheme',
    r'()Ljava/lang/String;',
  );

  static final _getScheme = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String getScheme()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getScheme() {
    return _getScheme(reference.pointer, _id_getScheme as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_getType = _class.instanceMethodId(
    r'getType',
    r'()Ljava/lang/String;',
  );

  static final _getType = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String getType()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getType() {
    return _getType(reference.pointer, _id_getType as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_resolveType = _class.instanceMethodId(
    r'resolveType',
    r'(Landroid/content/Context;)Ljava/lang/String;',
  );

  static final _resolveType = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.String resolveType(android.content.Context context)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString resolveType(
    context_.Context context,
  ) {
    return _resolveType(reference.pointer, _id_resolveType as jni.JMethodIDPtr,
            context.reference.pointer)
        .object(const jni.JStringType());
  }

  static final _id_resolveType1 = _class.instanceMethodId(
    r'resolveType',
    r'(Landroid/content/ContentResolver;)Ljava/lang/String;',
  );

  static final _resolveType1 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.String resolveType(android.content.ContentResolver contentResolver)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString resolveType1(
    jni.JObject contentResolver,
  ) {
    return _resolveType1(
            reference.pointer,
            _id_resolveType1 as jni.JMethodIDPtr,
            contentResolver.reference.pointer)
        .object(const jni.JStringType());
  }

  static final _id_resolveTypeIfNeeded = _class.instanceMethodId(
    r'resolveTypeIfNeeded',
    r'(Landroid/content/ContentResolver;)Ljava/lang/String;',
  );

  static final _resolveTypeIfNeeded = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.String resolveTypeIfNeeded(android.content.ContentResolver contentResolver)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString resolveTypeIfNeeded(
    jni.JObject contentResolver,
  ) {
    return _resolveTypeIfNeeded(
            reference.pointer,
            _id_resolveTypeIfNeeded as jni.JMethodIDPtr,
            contentResolver.reference.pointer)
        .object(const jni.JStringType());
  }

  static final _id_getIdentifier = _class.instanceMethodId(
    r'getIdentifier',
    r'()Ljava/lang/String;',
  );

  static final _getIdentifier = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String getIdentifier()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getIdentifier() {
    return _getIdentifier(
            reference.pointer, _id_getIdentifier as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_hasCategory = _class.instanceMethodId(
    r'hasCategory',
    r'(Ljava/lang/String;)Z',
  );

  static final _hasCategory = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallBooleanMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public boolean hasCategory(java.lang.String string)`
  bool hasCategory(
    jni.JString string,
  ) {
    return _hasCategory(reference.pointer, _id_hasCategory as jni.JMethodIDPtr,
            string.reference.pointer)
        .boolean;
  }

  static final _id_getCategories = _class.instanceMethodId(
    r'getCategories',
    r'()Ljava/util/Set;',
  );

  static final _getCategories = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.util.Set getCategories()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JSet<jni.JString> getCategories() {
    return _getCategories(
            reference.pointer, _id_getCategories as jni.JMethodIDPtr)
        .object(const jni.JSetType(jni.JStringType()));
  }

  static final _id_getSelector = _class.instanceMethodId(
    r'getSelector',
    r'()Landroid/content/Intent;',
  );

  static final _getSelector = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.content.Intent getSelector()`
  /// The returned object must be released after use, by calling the [release] method.
  Intent getSelector() {
    return _getSelector(reference.pointer, _id_getSelector as jni.JMethodIDPtr)
        .object(const $IntentType());
  }

  static final _id_getClipData = _class.instanceMethodId(
    r'getClipData',
    r'()Landroid/content/ClipData;',
  );

  static final _getClipData = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.content.ClipData getClipData()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getClipData() {
    return _getClipData(reference.pointer, _id_getClipData as jni.JMethodIDPtr)
        .object(const jni.JObjectType());
  }

  static final _id_setExtrasClassLoader = _class.instanceMethodId(
    r'setExtrasClassLoader',
    r'(Ljava/lang/ClassLoader;)V',
  );

  static final _setExtrasClassLoader = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void setExtrasClassLoader(java.lang.ClassLoader classLoader)`
  void setExtrasClassLoader(
    jni.JObject classLoader,
  ) {
    _setExtrasClassLoader(
            reference.pointer,
            _id_setExtrasClassLoader as jni.JMethodIDPtr,
            classLoader.reference.pointer)
        .check();
  }

  static final _id_hasExtra = _class.instanceMethodId(
    r'hasExtra',
    r'(Ljava/lang/String;)Z',
  );

  static final _hasExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallBooleanMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public boolean hasExtra(java.lang.String string)`
  bool hasExtra(
    jni.JString string,
  ) {
    return _hasExtra(reference.pointer, _id_hasExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .boolean;
  }

  static final _id_hasFileDescriptors = _class.instanceMethodId(
    r'hasFileDescriptors',
    r'()Z',
  );

  static final _hasFileDescriptors = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallBooleanMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public boolean hasFileDescriptors()`
  bool hasFileDescriptors() {
    return _hasFileDescriptors(
            reference.pointer, _id_hasFileDescriptors as jni.JMethodIDPtr)
        .boolean;
  }

  static final _id_getBooleanExtra = _class.instanceMethodId(
    r'getBooleanExtra',
    r'(Ljava/lang/String;Z)Z',
  );

  static final _getBooleanExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallBooleanMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public boolean getBooleanExtra(java.lang.String string, boolean z)`
  bool getBooleanExtra(
    jni.JString string,
    bool z,
  ) {
    return _getBooleanExtra(
            reference.pointer,
            _id_getBooleanExtra as jni.JMethodIDPtr,
            string.reference.pointer,
            z ? 1 : 0)
        .boolean;
  }

  static final _id_getByteExtra = _class.instanceMethodId(
    r'getByteExtra',
    r'(Ljava/lang/String;B)B',
  );

  static final _getByteExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallByteMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public byte getByteExtra(java.lang.String string, byte b)`
  int getByteExtra(
    jni.JString string,
    int b,
  ) {
    return _getByteExtra(reference.pointer,
            _id_getByteExtra as jni.JMethodIDPtr, string.reference.pointer, b)
        .byte;
  }

  static final _id_getShortExtra = _class.instanceMethodId(
    r'getShortExtra',
    r'(Ljava/lang/String;S)S',
  );

  static final _getShortExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallShortMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public short getShortExtra(java.lang.String string, short s)`
  int getShortExtra(
    jni.JString string,
    int s,
  ) {
    return _getShortExtra(reference.pointer,
            _id_getShortExtra as jni.JMethodIDPtr, string.reference.pointer, s)
        .short;
  }

  static final _id_getCharExtra = _class.instanceMethodId(
    r'getCharExtra',
    r'(Ljava/lang/String;C)C',
  );

  static final _getCharExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallCharMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public char getCharExtra(java.lang.String string, char c)`
  int getCharExtra(
    jni.JString string,
    int c,
  ) {
    return _getCharExtra(reference.pointer,
            _id_getCharExtra as jni.JMethodIDPtr, string.reference.pointer, c)
        .char;
  }

  static final _id_getIntExtra = _class.instanceMethodId(
    r'getIntExtra',
    r'(Ljava/lang/String;I)I',
  );

  static final _getIntExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public int getIntExtra(java.lang.String string, int i)`
  int getIntExtra(
    jni.JString string,
    int i,
  ) {
    return _getIntExtra(reference.pointer, _id_getIntExtra as jni.JMethodIDPtr,
            string.reference.pointer, i)
        .integer;
  }

  static final _id_getLongExtra = _class.instanceMethodId(
    r'getLongExtra',
    r'(Ljava/lang/String;J)J',
  );

  static final _getLongExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, ffi.Int64)>)>>(
          'globalEnv_CallLongMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public long getLongExtra(java.lang.String string, long j)`
  int getLongExtra(
    jni.JString string,
    int j,
  ) {
    return _getLongExtra(reference.pointer,
            _id_getLongExtra as jni.JMethodIDPtr, string.reference.pointer, j)
        .long;
  }

  static final _id_getFloatExtra = _class.instanceMethodId(
    r'getFloatExtra',
    r'(Ljava/lang/String;F)F',
  );

  static final _getFloatExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, ffi.Double)>)>>(
          'globalEnv_CallFloatMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, double)>();

  /// from: `public float getFloatExtra(java.lang.String string, float f)`
  double getFloatExtra(
    jni.JString string,
    double f,
  ) {
    return _getFloatExtra(reference.pointer,
            _id_getFloatExtra as jni.JMethodIDPtr, string.reference.pointer, f)
        .float;
  }

  static final _id_getDoubleExtra = _class.instanceMethodId(
    r'getDoubleExtra',
    r'(Ljava/lang/String;D)D',
  );

  static final _getDoubleExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, ffi.Double)>)>>(
          'globalEnv_CallDoubleMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, double)>();

  /// from: `public double getDoubleExtra(java.lang.String string, double d)`
  double getDoubleExtra(
    jni.JString string,
    double d,
  ) {
    return _getDoubleExtra(reference.pointer,
            _id_getDoubleExtra as jni.JMethodIDPtr, string.reference.pointer, d)
        .doubleFloat;
  }

  static final _id_getStringExtra = _class.instanceMethodId(
    r'getStringExtra',
    r'(Ljava/lang/String;)Ljava/lang/String;',
  );

  static final _getStringExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.String getStringExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getStringExtra(
    jni.JString string,
  ) {
    return _getStringExtra(reference.pointer,
            _id_getStringExtra as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JStringType());
  }

  static final _id_getCharSequenceExtra = _class.instanceMethodId(
    r'getCharSequenceExtra',
    r'(Ljava/lang/String;)Ljava/lang/CharSequence;',
  );

  static final _getCharSequenceExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.CharSequence getCharSequenceExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCharSequenceExtra(
    jni.JString string,
  ) {
    return _getCharSequenceExtra(
            reference.pointer,
            _id_getCharSequenceExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getParcelableExtra = _class.instanceMethodId(
    r'getParcelableExtra',
    r'(Ljava/lang/String;)Landroid/os/Parcelable;',
  );

  static final _getParcelableExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public T getParcelableExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  $T getParcelableExtra<$T extends jni.JObject>(
    jni.JString string, {
    required jni.JObjType<$T> T,
  }) {
    return _getParcelableExtra(
            reference.pointer,
            _id_getParcelableExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(T);
  }

  static final _id_getParcelableExtra1 = _class.instanceMethodId(
    r'getParcelableExtra',
    r'(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;',
  );

  static final _getParcelableExtra1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public T getParcelableExtra(java.lang.String string, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  $T getParcelableExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return _getParcelableExtra1(
            reference.pointer,
            _id_getParcelableExtra1 as jni.JMethodIDPtr,
            string.reference.pointer,
            class0.reference.pointer)
        .object(T);
  }

  static final _id_getParcelableArrayExtra = _class.instanceMethodId(
    r'getParcelableArrayExtra',
    r'(Ljava/lang/String;)[Landroid/os/Parcelable;',
  );

  static final _getParcelableArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.os.Parcelable[] getParcelableArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getParcelableArrayExtra(
    jni.JString string,
  ) {
    return _getParcelableArrayExtra(
            reference.pointer,
            _id_getParcelableArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.JObjectType()));
  }

  static final _id_getParcelableArrayExtra1 = _class.instanceMethodId(
    r'getParcelableArrayExtra',
    r'(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/Object;',
  );

  static final _getParcelableArrayExtra1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.Object[] getParcelableArrayExtra(java.lang.String string, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<$T> getParcelableArrayExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return _getParcelableArrayExtra1(
            reference.pointer,
            _id_getParcelableArrayExtra1 as jni.JMethodIDPtr,
            string.reference.pointer,
            class0.reference.pointer)
        .object(jni.JArrayType(T));
  }

  static final _id_getParcelableArrayListExtra = _class.instanceMethodId(
    r'getParcelableArrayListExtra',
    r'(Ljava/lang/String;)Ljava/util/ArrayList;',
  );

  static final _getParcelableArrayListExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.util.ArrayList getParcelableArrayListExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParcelableArrayListExtra<$T extends jni.JObject>(
    jni.JString string, {
    required jni.JObjType<$T> T,
  }) {
    return _getParcelableArrayListExtra(
            reference.pointer,
            _id_getParcelableArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getParcelableArrayListExtra1 = _class.instanceMethodId(
    r'getParcelableArrayListExtra',
    r'(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/ArrayList;',
  );

  static final _getParcelableArrayListExtra1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public java.util.ArrayList getParcelableArrayListExtra(java.lang.String string, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParcelableArrayListExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return _getParcelableArrayListExtra1(
            reference.pointer,
            _id_getParcelableArrayListExtra1 as jni.JMethodIDPtr,
            string.reference.pointer,
            class0.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getSerializableExtra = _class.instanceMethodId(
    r'getSerializableExtra',
    r'(Ljava/lang/String;)Ljava/io/Serializable;',
  );

  static final _getSerializableExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.io.Serializable getSerializableExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSerializableExtra(
    jni.JString string,
  ) {
    return _getSerializableExtra(
            reference.pointer,
            _id_getSerializableExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getSerializableExtra1 = _class.instanceMethodId(
    r'getSerializableExtra',
    r'(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/Serializable;',
  );

  static final _getSerializableExtra1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public T getSerializableExtra(java.lang.String string, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  $T getSerializableExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return _getSerializableExtra1(
            reference.pointer,
            _id_getSerializableExtra1 as jni.JMethodIDPtr,
            string.reference.pointer,
            class0.reference.pointer)
        .object(T);
  }

  static final _id_getIntegerArrayListExtra = _class.instanceMethodId(
    r'getIntegerArrayListExtra',
    r'(Ljava/lang/String;)Ljava/util/ArrayList;',
  );

  static final _getIntegerArrayListExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.util.ArrayList getIntegerArrayListExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getIntegerArrayListExtra(
    jni.JString string,
  ) {
    return _getIntegerArrayListExtra(
            reference.pointer,
            _id_getIntegerArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getStringArrayListExtra = _class.instanceMethodId(
    r'getStringArrayListExtra',
    r'(Ljava/lang/String;)Ljava/util/ArrayList;',
  );

  static final _getStringArrayListExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.util.ArrayList getStringArrayListExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getStringArrayListExtra(
    jni.JString string,
  ) {
    return _getStringArrayListExtra(
            reference.pointer,
            _id_getStringArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getCharSequenceArrayListExtra = _class.instanceMethodId(
    r'getCharSequenceArrayListExtra',
    r'(Ljava/lang/String;)Ljava/util/ArrayList;',
  );

  static final _getCharSequenceArrayListExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCharSequenceArrayListExtra(
    jni.JString string,
  ) {
    return _getCharSequenceArrayListExtra(
            reference.pointer,
            _id_getCharSequenceArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getBooleanArrayExtra = _class.instanceMethodId(
    r'getBooleanArrayExtra',
    r'(Ljava/lang/String;)[Z',
  );

  static final _getBooleanArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public boolean[] getBooleanArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jboolean> getBooleanArrayExtra(
    jni.JString string,
  ) {
    return _getBooleanArrayExtra(
            reference.pointer,
            _id_getBooleanArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.jbooleanType()));
  }

  static final _id_getByteArrayExtra = _class.instanceMethodId(
    r'getByteArrayExtra',
    r'(Ljava/lang/String;)[B',
  );

  static final _getByteArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public byte[] getByteArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jbyte> getByteArrayExtra(
    jni.JString string,
  ) {
    return _getByteArrayExtra(reference.pointer,
            _id_getByteArrayExtra as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JArrayType(jni.jbyteType()));
  }

  static final _id_getShortArrayExtra = _class.instanceMethodId(
    r'getShortArrayExtra',
    r'(Ljava/lang/String;)[S',
  );

  static final _getShortArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public short[] getShortArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jshort> getShortArrayExtra(
    jni.JString string,
  ) {
    return _getShortArrayExtra(
            reference.pointer,
            _id_getShortArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.jshortType()));
  }

  static final _id_getCharArrayExtra = _class.instanceMethodId(
    r'getCharArrayExtra',
    r'(Ljava/lang/String;)[C',
  );

  static final _getCharArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public char[] getCharArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jchar> getCharArrayExtra(
    jni.JString string,
  ) {
    return _getCharArrayExtra(reference.pointer,
            _id_getCharArrayExtra as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JArrayType(jni.jcharType()));
  }

  static final _id_getIntArrayExtra = _class.instanceMethodId(
    r'getIntArrayExtra',
    r'(Ljava/lang/String;)[I',
  );

  static final _getIntArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public int[] getIntArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> getIntArrayExtra(
    jni.JString string,
  ) {
    return _getIntArrayExtra(reference.pointer,
            _id_getIntArrayExtra as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JArrayType(jni.jintType()));
  }

  static final _id_getLongArrayExtra = _class.instanceMethodId(
    r'getLongArrayExtra',
    r'(Ljava/lang/String;)[J',
  );

  static final _getLongArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public long[] getLongArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jlong> getLongArrayExtra(
    jni.JString string,
  ) {
    return _getLongArrayExtra(reference.pointer,
            _id_getLongArrayExtra as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JArrayType(jni.jlongType()));
  }

  static final _id_getFloatArrayExtra = _class.instanceMethodId(
    r'getFloatArrayExtra',
    r'(Ljava/lang/String;)[F',
  );

  static final _getFloatArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public float[] getFloatArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jfloat> getFloatArrayExtra(
    jni.JString string,
  ) {
    return _getFloatArrayExtra(
            reference.pointer,
            _id_getFloatArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.jfloatType()));
  }

  static final _id_getDoubleArrayExtra = _class.instanceMethodId(
    r'getDoubleArrayExtra',
    r'(Ljava/lang/String;)[D',
  );

  static final _getDoubleArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public double[] getDoubleArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jdouble> getDoubleArrayExtra(
    jni.JString string,
  ) {
    return _getDoubleArrayExtra(
            reference.pointer,
            _id_getDoubleArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.jdoubleType()));
  }

  static final _id_getStringArrayExtra = _class.instanceMethodId(
    r'getStringArrayExtra',
    r'(Ljava/lang/String;)[Ljava/lang/String;',
  );

  static final _getStringArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.String[] getStringArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JString> getStringArrayExtra(
    jni.JString string,
  ) {
    return _getStringArrayExtra(
            reference.pointer,
            _id_getStringArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.JStringType()));
  }

  static final _id_getCharSequenceArrayExtra = _class.instanceMethodId(
    r'getCharSequenceArrayExtra',
    r'(Ljava/lang/String;)[Ljava/lang/CharSequence;',
  );

  static final _getCharSequenceArrayExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getCharSequenceArrayExtra(
    jni.JString string,
  ) {
    return _getCharSequenceArrayExtra(
            reference.pointer,
            _id_getCharSequenceArrayExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const jni.JArrayType(jni.JObjectType()));
  }

  static final _id_getBundleExtra = _class.instanceMethodId(
    r'getBundleExtra',
    r'(Ljava/lang/String;)Landroid/os/Bundle;',
  );

  static final _getBundleExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.os.Bundle getBundleExtra(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getBundleExtra(
    jni.JString string,
  ) {
    return _getBundleExtra(reference.pointer,
            _id_getBundleExtra as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_getExtras = _class.instanceMethodId(
    r'getExtras',
    r'()Landroid/os/Bundle;',
  );

  static final _getExtras = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.os.Bundle getExtras()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getExtras() {
    return _getExtras(reference.pointer, _id_getExtras as jni.JMethodIDPtr)
        .object(const jni.JObjectType());
  }

  static final _id_getFlags = _class.instanceMethodId(
    r'getFlags',
    r'()I',
  );

  static final _getFlags = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public int getFlags()`
  int getFlags() {
    return _getFlags(reference.pointer, _id_getFlags as jni.JMethodIDPtr)
        .integer;
  }

  static final _id_getPackage = _class.instanceMethodId(
    r'getPackage',
    r'()Ljava/lang/String;',
  );

  static final _getPackage = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String getPackage()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackage() {
    return _getPackage(reference.pointer, _id_getPackage as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_getComponent = _class.instanceMethodId(
    r'getComponent',
    r'()Landroid/content/ComponentName;',
  );

  static final _getComponent = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.content.ComponentName getComponent()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getComponent() {
    return _getComponent(
            reference.pointer, _id_getComponent as jni.JMethodIDPtr)
        .object(const jni.JObjectType());
  }

  static final _id_getSourceBounds = _class.instanceMethodId(
    r'getSourceBounds',
    r'()Landroid/graphics/Rect;',
  );

  static final _getSourceBounds = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public android.graphics.Rect getSourceBounds()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSourceBounds() {
    return _getSourceBounds(
            reference.pointer, _id_getSourceBounds as jni.JMethodIDPtr)
        .object(const jni.JObjectType());
  }

  static final _id_resolveActivity = _class.instanceMethodId(
    r'resolveActivity',
    r'(Landroid/content/pm/PackageManager;)Landroid/content/ComponentName;',
  );

  static final _resolveActivity = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.ComponentName resolveActivity(android.content.pm.PackageManager packageManager)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject resolveActivity(
    jni.JObject packageManager,
  ) {
    return _resolveActivity(
            reference.pointer,
            _id_resolveActivity as jni.JMethodIDPtr,
            packageManager.reference.pointer)
        .object(const jni.JObjectType());
  }

  static final _id_resolveActivityInfo = _class.instanceMethodId(
    r'resolveActivityInfo',
    r'(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;',
  );

  static final _resolveActivityInfo = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager packageManager, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject resolveActivityInfo(
    jni.JObject packageManager,
    int i,
  ) {
    return _resolveActivityInfo(
            reference.pointer,
            _id_resolveActivityInfo as jni.JMethodIDPtr,
            packageManager.reference.pointer,
            i)
        .object(const jni.JObjectType());
  }

  static final _id_setAction = _class.instanceMethodId(
    r'setAction',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setAction = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setAction(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setAction(
    jni.JString string,
  ) {
    return _setAction(reference.pointer, _id_setAction as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setData = _class.instanceMethodId(
    r'setData',
    r'(Landroid/net/Uri;)Landroid/content/Intent;',
  );

  static final _setData = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setData(android.net.Uri uri)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setData(
    jni.JObject uri,
  ) {
    return _setData(reference.pointer, _id_setData as jni.JMethodIDPtr,
            uri.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setDataAndNormalize = _class.instanceMethodId(
    r'setDataAndNormalize',
    r'(Landroid/net/Uri;)Landroid/content/Intent;',
  );

  static final _setDataAndNormalize = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setDataAndNormalize(android.net.Uri uri)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setDataAndNormalize(
    jni.JObject uri,
  ) {
    return _setDataAndNormalize(reference.pointer,
            _id_setDataAndNormalize as jni.JMethodIDPtr, uri.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setType = _class.instanceMethodId(
    r'setType',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setType = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setType(
    jni.JString string,
  ) {
    return _setType(reference.pointer, _id_setType as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setTypeAndNormalize = _class.instanceMethodId(
    r'setTypeAndNormalize',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setTypeAndNormalize = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setTypeAndNormalize(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setTypeAndNormalize(
    jni.JString string,
  ) {
    return _setTypeAndNormalize(
            reference.pointer,
            _id_setTypeAndNormalize as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setDataAndType = _class.instanceMethodId(
    r'setDataAndType',
    r'(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setDataAndType = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setDataAndType(android.net.Uri uri, java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setDataAndType(
    jni.JObject uri,
    jni.JString string,
  ) {
    return _setDataAndType(
            reference.pointer,
            _id_setDataAndType as jni.JMethodIDPtr,
            uri.reference.pointer,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setDataAndTypeAndNormalize = _class.instanceMethodId(
    r'setDataAndTypeAndNormalize',
    r'(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setDataAndTypeAndNormalize = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setDataAndTypeAndNormalize(android.net.Uri uri, java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setDataAndTypeAndNormalize(
    jni.JObject uri,
    jni.JString string,
  ) {
    return _setDataAndTypeAndNormalize(
            reference.pointer,
            _id_setDataAndTypeAndNormalize as jni.JMethodIDPtr,
            uri.reference.pointer,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setIdentifier = _class.instanceMethodId(
    r'setIdentifier',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setIdentifier = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setIdentifier(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setIdentifier(
    jni.JString string,
  ) {
    return _setIdentifier(reference.pointer,
            _id_setIdentifier as jni.JMethodIDPtr, string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_addCategory = _class.instanceMethodId(
    r'addCategory',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _addCategory = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent addCategory(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent addCategory(
    jni.JString string,
  ) {
    return _addCategory(reference.pointer, _id_addCategory as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_removeCategory = _class.instanceMethodId(
    r'removeCategory',
    r'(Ljava/lang/String;)V',
  );

  static final _removeCategory = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void removeCategory(java.lang.String string)`
  void removeCategory(
    jni.JString string,
  ) {
    _removeCategory(reference.pointer, _id_removeCategory as jni.JMethodIDPtr,
            string.reference.pointer)
        .check();
  }

  static final _id_setSelector = _class.instanceMethodId(
    r'setSelector',
    r'(Landroid/content/Intent;)V',
  );

  static final _setSelector = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void setSelector(android.content.Intent intent)`
  void setSelector(
    Intent intent,
  ) {
    _setSelector(reference.pointer, _id_setSelector as jni.JMethodIDPtr,
            intent.reference.pointer)
        .check();
  }

  static final _id_setClipData = _class.instanceMethodId(
    r'setClipData',
    r'(Landroid/content/ClipData;)V',
  );

  static final _setClipData = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void setClipData(android.content.ClipData clipData)`
  void setClipData(
    jni.JObject clipData,
  ) {
    _setClipData(reference.pointer, _id_setClipData as jni.JMethodIDPtr,
            clipData.reference.pointer)
        .check();
  }

  static final _id_putExtra = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;Z)Landroid/content/Intent;',
  );

  static final _putExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra(
    jni.JString string,
    bool z,
  ) {
    return _putExtra(reference.pointer, _id_putExtra as jni.JMethodIDPtr,
            string.reference.pointer, z ? 1 : 0)
        .object(const $IntentType());
  }

  static final _id_putExtra1 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;B)Landroid/content/Intent;',
  );

  static final _putExtra1 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, byte b)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra1(
    jni.JString string,
    int b,
  ) {
    return _putExtra1(reference.pointer, _id_putExtra1 as jni.JMethodIDPtr,
            string.reference.pointer, b)
        .object(const $IntentType());
  }

  static final _id_putExtra2 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;C)Landroid/content/Intent;',
  );

  static final _putExtra2 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, char c)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra2(
    jni.JString string,
    int c,
  ) {
    return _putExtra2(reference.pointer, _id_putExtra2 as jni.JMethodIDPtr,
            string.reference.pointer, c)
        .object(const $IntentType());
  }

  static final _id_putExtra3 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;S)Landroid/content/Intent;',
  );

  static final _putExtra3 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, short s)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra3(
    jni.JString string,
    int s,
  ) {
    return _putExtra3(reference.pointer, _id_putExtra3 as jni.JMethodIDPtr,
            string.reference.pointer, s)
        .object(const $IntentType());
  }

  static final _id_putExtra4 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;I)Landroid/content/Intent;',
  );

  static final _putExtra4 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra4(
    jni.JString string,
    int i,
  ) {
    return _putExtra4(reference.pointer, _id_putExtra4 as jni.JMethodIDPtr,
            string.reference.pointer, i)
        .object(const $IntentType());
  }

  static final _id_putExtra5 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;J)Landroid/content/Intent;',
  );

  static final _putExtra5 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, ffi.Int64)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, long j)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra5(
    jni.JString string,
    int j,
  ) {
    return _putExtra5(reference.pointer, _id_putExtra5 as jni.JMethodIDPtr,
            string.reference.pointer, j)
        .object(const $IntentType());
  }

  static final _id_putExtra6 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;F)Landroid/content/Intent;',
  );

  static final _putExtra6 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, ffi.Double)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, double)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, float f)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra6(
    jni.JString string,
    double f,
  ) {
    return _putExtra6(reference.pointer, _id_putExtra6 as jni.JMethodIDPtr,
            string.reference.pointer, f)
        .object(const $IntentType());
  }

  static final _id_putExtra7 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;D)Landroid/content/Intent;',
  );

  static final _putExtra7 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, ffi.Double)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, double)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, double d)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra7(
    jni.JString string,
    double d,
  ) {
    return _putExtra7(reference.pointer, _id_putExtra7 as jni.JMethodIDPtr,
            string.reference.pointer, d)
        .object(const $IntentType());
  }

  static final _id_putExtra8 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _putExtra8 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, java.lang.String string1)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra8(
    jni.JString string,
    jni.JString string1,
  ) {
    return _putExtra8(reference.pointer, _id_putExtra8 as jni.JMethodIDPtr,
            string.reference.pointer, string1.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra9 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;Ljava/lang/CharSequence;)Landroid/content/Intent;',
  );

  static final _putExtra9 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, java.lang.CharSequence charSequence)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra9(
    jni.JString string,
    jni.JObject charSequence,
  ) {
    return _putExtra9(reference.pointer, _id_putExtra9 as jni.JMethodIDPtr,
            string.reference.pointer, charSequence.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra10 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;',
  );

  static final _putExtra10 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, android.os.Parcelable parcelable)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra10(
    jni.JString string,
    jni.JObject parcelable,
  ) {
    return _putExtra10(reference.pointer, _id_putExtra10 as jni.JMethodIDPtr,
            string.reference.pointer, parcelable.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra11 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[Landroid/os/Parcelable;)Landroid/content/Intent;',
  );

  static final _putExtra11 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, android.os.Parcelable[] parcelables)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra11(
    jni.JString string,
    jni.JArray<jni.JObject> parcelables,
  ) {
    return _putExtra11(reference.pointer, _id_putExtra11 as jni.JMethodIDPtr,
            string.reference.pointer, parcelables.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putParcelableArrayListExtra = _class.instanceMethodId(
    r'putParcelableArrayListExtra',
    r'(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;',
  );

  static final _putParcelableArrayListExtra = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putParcelableArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putParcelableArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return _putParcelableArrayListExtra(
            reference.pointer,
            _id_putParcelableArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer,
            arrayList.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putIntegerArrayListExtra = _class.instanceMethodId(
    r'putIntegerArrayListExtra',
    r'(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;',
  );

  static final _putIntegerArrayListExtra = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putIntegerArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putIntegerArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return _putIntegerArrayListExtra(
            reference.pointer,
            _id_putIntegerArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer,
            arrayList.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putStringArrayListExtra = _class.instanceMethodId(
    r'putStringArrayListExtra',
    r'(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;',
  );

  static final _putStringArrayListExtra = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putStringArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putStringArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return _putStringArrayListExtra(
            reference.pointer,
            _id_putStringArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer,
            arrayList.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putCharSequenceArrayListExtra = _class.instanceMethodId(
    r'putCharSequenceArrayListExtra',
    r'(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;',
  );

  static final _putCharSequenceArrayListExtra = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putCharSequenceArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putCharSequenceArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return _putCharSequenceArrayListExtra(
            reference.pointer,
            _id_putCharSequenceArrayListExtra as jni.JMethodIDPtr,
            string.reference.pointer,
            arrayList.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra12 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;',
  );

  static final _putExtra12 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, java.io.Serializable serializable)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra12(
    jni.JString string,
    jni.JObject serializable,
  ) {
    return _putExtra12(reference.pointer, _id_putExtra12 as jni.JMethodIDPtr,
            string.reference.pointer, serializable.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra13 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[Z)Landroid/content/Intent;',
  );

  static final _putExtra13 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, boolean[] zs)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra13(
    jni.JString string,
    jni.JArray<jni.jboolean> zs,
  ) {
    return _putExtra13(reference.pointer, _id_putExtra13 as jni.JMethodIDPtr,
            string.reference.pointer, zs.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra14 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[B)Landroid/content/Intent;',
  );

  static final _putExtra14 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, byte[] bs)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra14(
    jni.JString string,
    jni.JArray<jni.jbyte> bs,
  ) {
    return _putExtra14(reference.pointer, _id_putExtra14 as jni.JMethodIDPtr,
            string.reference.pointer, bs.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra15 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[S)Landroid/content/Intent;',
  );

  static final _putExtra15 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, short[] ss)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra15(
    jni.JString string,
    jni.JArray<jni.jshort> ss,
  ) {
    return _putExtra15(reference.pointer, _id_putExtra15 as jni.JMethodIDPtr,
            string.reference.pointer, ss.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra16 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[C)Landroid/content/Intent;',
  );

  static final _putExtra16 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, char[] cs)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra16(
    jni.JString string,
    jni.JArray<jni.jchar> cs,
  ) {
    return _putExtra16(reference.pointer, _id_putExtra16 as jni.JMethodIDPtr,
            string.reference.pointer, cs.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra17 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[I)Landroid/content/Intent;',
  );

  static final _putExtra17 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, int[] is)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra17(
    jni.JString string,
    jni.JArray<jni.jint> is0,
  ) {
    return _putExtra17(reference.pointer, _id_putExtra17 as jni.JMethodIDPtr,
            string.reference.pointer, is0.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra18 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[J)Landroid/content/Intent;',
  );

  static final _putExtra18 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, long[] js)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra18(
    jni.JString string,
    jni.JArray<jni.jlong> js,
  ) {
    return _putExtra18(reference.pointer, _id_putExtra18 as jni.JMethodIDPtr,
            string.reference.pointer, js.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra19 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[F)Landroid/content/Intent;',
  );

  static final _putExtra19 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, float[] fs)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra19(
    jni.JString string,
    jni.JArray<jni.jfloat> fs,
  ) {
    return _putExtra19(reference.pointer, _id_putExtra19 as jni.JMethodIDPtr,
            string.reference.pointer, fs.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra20 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[D)Landroid/content/Intent;',
  );

  static final _putExtra20 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, double[] ds)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra20(
    jni.JString string,
    jni.JArray<jni.jdouble> ds,
  ) {
    return _putExtra20(reference.pointer, _id_putExtra20 as jni.JMethodIDPtr,
            string.reference.pointer, ds.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra21 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _putExtra21 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, java.lang.String[] strings)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra21(
    jni.JString string,
    jni.JArray<jni.JString> strings,
  ) {
    return _putExtra21(reference.pointer, _id_putExtra21 as jni.JMethodIDPtr,
            string.reference.pointer, strings.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra22 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;[Ljava/lang/CharSequence;)Landroid/content/Intent;',
  );

  static final _putExtra22 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, java.lang.CharSequence[] charSequences)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra22(
    jni.JString string,
    jni.JArray<jni.JObject> charSequences,
  ) {
    return _putExtra22(reference.pointer, _id_putExtra22 as jni.JMethodIDPtr,
            string.reference.pointer, charSequences.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtra23 = _class.instanceMethodId(
    r'putExtra',
    r'(Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;',
  );

  static final _putExtra23 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtra(java.lang.String string, android.os.Bundle bundle)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra23(
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _putExtra23(reference.pointer, _id_putExtra23 as jni.JMethodIDPtr,
            string.reference.pointer, bundle.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtras = _class.instanceMethodId(
    r'putExtras',
    r'(Landroid/content/Intent;)Landroid/content/Intent;',
  );

  static final _putExtras = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtras(android.content.Intent intent)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtras(
    Intent intent,
  ) {
    return _putExtras(reference.pointer, _id_putExtras as jni.JMethodIDPtr,
            intent.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_putExtras1 = _class.instanceMethodId(
    r'putExtras',
    r'(Landroid/os/Bundle;)Landroid/content/Intent;',
  );

  static final _putExtras1 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent putExtras(android.os.Bundle bundle)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtras1(
    jni.JObject bundle,
  ) {
    return _putExtras1(reference.pointer, _id_putExtras1 as jni.JMethodIDPtr,
            bundle.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_replaceExtras = _class.instanceMethodId(
    r'replaceExtras',
    r'(Landroid/content/Intent;)Landroid/content/Intent;',
  );

  static final _replaceExtras = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent replaceExtras(android.content.Intent intent)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent replaceExtras(
    Intent intent,
  ) {
    return _replaceExtras(reference.pointer,
            _id_replaceExtras as jni.JMethodIDPtr, intent.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_replaceExtras1 = _class.instanceMethodId(
    r'replaceExtras',
    r'(Landroid/os/Bundle;)Landroid/content/Intent;',
  );

  static final _replaceExtras1 = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent replaceExtras(android.os.Bundle bundle)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent replaceExtras1(
    jni.JObject bundle,
  ) {
    return _replaceExtras1(reference.pointer,
            _id_replaceExtras1 as jni.JMethodIDPtr, bundle.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_removeExtra = _class.instanceMethodId(
    r'removeExtra',
    r'(Ljava/lang/String;)V',
  );

  static final _removeExtra = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void removeExtra(java.lang.String string)`
  void removeExtra(
    jni.JString string,
  ) {
    _removeExtra(reference.pointer, _id_removeExtra as jni.JMethodIDPtr,
            string.reference.pointer)
        .check();
  }

  static final _id_setFlags = _class.instanceMethodId(
    r'setFlags',
    r'(I)Landroid/content/Intent;',
  );

  static final _setFlags = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
                  ffi.VarArgs<($Int32,)>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, jni.JMethodIDPtr, int)>();

  /// from: `public android.content.Intent setFlags(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setFlags(
    int i,
  ) {
    return _setFlags(reference.pointer, _id_setFlags as jni.JMethodIDPtr, i)
        .object(const $IntentType());
  }

  static final _id_addFlags = _class.instanceMethodId(
    r'addFlags',
    r'(I)Landroid/content/Intent;',
  );

  static final _addFlags = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
                  ffi.VarArgs<($Int32,)>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, jni.JMethodIDPtr, int)>();

  /// from: `public android.content.Intent addFlags(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent addFlags(
    int i,
  ) {
    return _addFlags(reference.pointer, _id_addFlags as jni.JMethodIDPtr, i)
        .object(const $IntentType());
  }

  static final _id_removeFlags = _class.instanceMethodId(
    r'removeFlags',
    r'(I)V',
  );

  static final _removeFlags = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JThrowablePtr Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<($Int32,)>)>>('globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(
              ffi.Pointer<ffi.Void>, jni.JMethodIDPtr, int)>();

  /// from: `public void removeFlags(int i)`
  void removeFlags(
    int i,
  ) {
    _removeFlags(reference.pointer, _id_removeFlags as jni.JMethodIDPtr, i)
        .check();
  }

  static final _id_setPackage = _class.instanceMethodId(
    r'setPackage',
    r'(Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setPackage = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setPackage(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setPackage(
    jni.JString string,
  ) {
    return _setPackage(reference.pointer, _id_setPackage as jni.JMethodIDPtr,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setComponent = _class.instanceMethodId(
    r'setComponent',
    r'(Landroid/content/ComponentName;)Landroid/content/Intent;',
  );

  static final _setComponent = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setComponent(android.content.ComponentName componentName)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setComponent(
    jni.JObject componentName,
  ) {
    return _setComponent(
            reference.pointer,
            _id_setComponent as jni.JMethodIDPtr,
            componentName.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setClassName = _class.instanceMethodId(
    r'setClassName',
    r'(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setClassName = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setClassName(android.content.Context context, java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setClassName(
    context_.Context context,
    jni.JString string,
  ) {
    return _setClassName(
            reference.pointer,
            _id_setClassName as jni.JMethodIDPtr,
            context.reference.pointer,
            string.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setClassName1 = _class.instanceMethodId(
    r'setClassName',
    r'(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;',
  );

  static final _setClassName1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setClassName(java.lang.String string, java.lang.String string1)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setClassName1(
    jni.JString string,
    jni.JString string1,
  ) {
    return _setClassName1(
            reference.pointer,
            _id_setClassName1 as jni.JMethodIDPtr,
            string.reference.pointer,
            string1.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setClass = _class.instanceMethodId(
    r'setClass',
    r'(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;',
  );

  static final _setClass = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: `public android.content.Intent setClass(android.content.Context context, java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  Intent setClass(
    context_.Context context,
    jni.JObject class0,
  ) {
    return _setClass(reference.pointer, _id_setClass as jni.JMethodIDPtr,
            context.reference.pointer, class0.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_setSourceBounds = _class.instanceMethodId(
    r'setSourceBounds',
    r'(Landroid/graphics/Rect;)V',
  );

  static final _setSourceBounds = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void setSourceBounds(android.graphics.Rect rect)`
  void setSourceBounds(
    jni.JObject rect,
  ) {
    _setSourceBounds(reference.pointer, _id_setSourceBounds as jni.JMethodIDPtr,
            rect.reference.pointer)
        .check();
  }

  static final _id_fillIn = _class.instanceMethodId(
    r'fillIn',
    r'(Landroid/content/Intent;I)I',
  );

  static final _fillIn = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public int fillIn(android.content.Intent intent, int i)`
  int fillIn(
    Intent intent,
    int i,
  ) {
    return _fillIn(reference.pointer, _id_fillIn as jni.JMethodIDPtr,
            intent.reference.pointer, i)
        .integer;
  }

  static final _id_filterEquals = _class.instanceMethodId(
    r'filterEquals',
    r'(Landroid/content/Intent;)Z',
  );

  static final _filterEquals = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallBooleanMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public boolean filterEquals(android.content.Intent intent)`
  bool filterEquals(
    Intent intent,
  ) {
    return _filterEquals(reference.pointer,
            _id_filterEquals as jni.JMethodIDPtr, intent.reference.pointer)
        .boolean;
  }

  static final _id_filterHashCode = _class.instanceMethodId(
    r'filterHashCode',
    r'()I',
  );

  static final _filterHashCode = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public int filterHashCode()`
  int filterHashCode() {
    return _filterHashCode(
            reference.pointer, _id_filterHashCode as jni.JMethodIDPtr)
        .integer;
  }

  static final _id_toString1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString1 = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return _toString1(reference.pointer, _id_toString1 as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_toURI = _class.instanceMethodId(
    r'toURI',
    r'()Ljava/lang/String;',
  );

  static final _toURI = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public java.lang.String toURI()`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toURI() {
    return _toURI(reference.pointer, _id_toURI as jni.JMethodIDPtr)
        .object(const jni.JStringType());
  }

  static final _id_toUri = _class.instanceMethodId(
    r'toUri',
    r'(I)Ljava/lang/String;',
  );

  static final _toUri = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
                  ffi.VarArgs<($Int32,)>)>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, jni.JMethodIDPtr, int)>();

  /// from: `public java.lang.String toUri(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toUri(
    int i,
  ) {
    return _toUri(reference.pointer, _id_toUri as jni.JMethodIDPtr, i)
        .object(const jni.JStringType());
  }

  static final _id_describeContents = _class.instanceMethodId(
    r'describeContents',
    r'()I',
  );

  static final _describeContents = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                ffi.Pointer<ffi.Void>,
                jni.JMethodIDPtr,
              )>>('globalEnv_CallIntMethod')
      .asFunction<
          jni.JniResult Function(
            ffi.Pointer<ffi.Void>,
            jni.JMethodIDPtr,
          )>();

  /// from: `public int describeContents()`
  int describeContents() {
    return _describeContents(
            reference.pointer, _id_describeContents as jni.JMethodIDPtr)
        .integer;
  }

  static final _id_writeToParcel = _class.instanceMethodId(
    r'writeToParcel',
    r'(Landroid/os/Parcel;I)V',
  );

  static final _writeToParcel = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>, $Int32)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: `public void writeToParcel(android.os.Parcel parcel, int i)`
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    _writeToParcel(reference.pointer, _id_writeToParcel as jni.JMethodIDPtr,
            parcel.reference.pointer, i)
        .check();
  }

  static final _id_readFromParcel = _class.instanceMethodId(
    r'readFromParcel',
    r'(Landroid/os/Parcel;)V',
  );

  static final _readFromParcel = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JThrowablePtr Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallVoidMethod')
      .asFunction<
          jni.JThrowablePtr Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `public void readFromParcel(android.os.Parcel parcel)`
  void readFromParcel(
    jni.JObject parcel,
  ) {
    _readFromParcel(reference.pointer, _id_readFromParcel as jni.JMethodIDPtr,
            parcel.reference.pointer)
        .check();
  }

  static final _id_parseIntent = _class.staticMethodId(
    r'parseIntent',
    r'(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/content/Intent;',
  );

  static final _parseIntent = ProtectedJniExtensions.lookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  jni.JMethodIDPtr,
                  ffi.VarArgs<
                      (
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Void>
                      )>)>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public android.content.Intent parseIntent(android.content.res.Resources resources, org.xmlpull.v1.XmlPullParser xmlPullParser, android.util.AttributeSet attributeSet)`
  /// The returned object must be released after use, by calling the [release] method.
  static Intent parseIntent(
    jni.JObject resources,
    jni.JObject xmlPullParser,
    jni.JObject attributeSet,
  ) {
    return _parseIntent(
            _class.reference.pointer,
            _id_parseIntent as jni.JMethodIDPtr,
            resources.reference.pointer,
            xmlPullParser.reference.pointer,
            attributeSet.reference.pointer)
        .object(const $IntentType());
  }

  static final _id_normalizeMimeType = _class.staticMethodId(
    r'normalizeMimeType',
    r'(Ljava/lang/String;)Ljava/lang/String;',
  );

  static final _normalizeMimeType = ProtectedJniExtensions.lookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      jni.JMethodIDPtr,
                      ffi.VarArgs<(ffi.Pointer<ffi.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, jni.JMethodIDPtr,
              ffi.Pointer<ffi.Void>)>();

  /// from: `static public java.lang.String normalizeMimeType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString normalizeMimeType(
    jni.JString string,
  ) {
    return _normalizeMimeType(_class.reference.pointer,
            _id_normalizeMimeType as jni.JMethodIDPtr, string.reference.pointer)
        .object(const jni.JStringType());
  }
}

final class $IntentType extends jni.JObjType<Intent> {
  const $IntentType();

  @override
  String get signature => r'Landroid/content/Intent;';

  @override
  Intent fromReference(jni.JReference reference) =>
      Intent.fromReference(reference);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($IntentType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($IntentType) && other is $IntentType;
  }
}
